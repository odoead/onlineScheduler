{
  "version": 3,
  "sources": ["../../../../../../node_modules/jwt-decode/build/esm/index.js", "../../../../../../node_modules/oidc-client-ts/dist/esm/oidc-client-ts.js"],
  "sourcesContent": ["export class InvalidTokenError extends Error {}\nInvalidTokenError.prototype.name = \"InvalidTokenError\";\nfunction b64DecodeUnicode(str) {\n  return decodeURIComponent(atob(str).replace(/(.)/g, (m, p) => {\n    let code = p.charCodeAt(0).toString(16).toUpperCase();\n    if (code.length < 2) {\n      code = \"0\" + code;\n    }\n    return \"%\" + code;\n  }));\n}\nfunction base64UrlDecode(str) {\n  let output = str.replace(/-/g, \"+\").replace(/_/g, \"/\");\n  switch (output.length % 4) {\n    case 0:\n      break;\n    case 2:\n      output += \"==\";\n      break;\n    case 3:\n      output += \"=\";\n      break;\n    default:\n      throw new Error(\"base64 string is not of the correct length\");\n  }\n  try {\n    return b64DecodeUnicode(output);\n  } catch (err) {\n    return atob(output);\n  }\n}\nexport function jwtDecode(token, options) {\n  if (typeof token !== \"string\") {\n    throw new InvalidTokenError(\"Invalid token specified: must be a string\");\n  }\n  options || (options = {});\n  const pos = options.header === true ? 0 : 1;\n  const part = token.split(\".\")[pos];\n  if (typeof part !== \"string\") {\n    throw new InvalidTokenError(`Invalid token specified: missing part #${pos + 1}`);\n  }\n  let decoded;\n  try {\n    decoded = base64UrlDecode(part);\n  } catch (e) {\n    throw new InvalidTokenError(`Invalid token specified: invalid base64 for part #${pos + 1} (${e.message})`);\n  }\n  try {\n    return JSON.parse(decoded);\n  } catch (e) {\n    throw new InvalidTokenError(`Invalid token specified: invalid json for part #${pos + 1} (${e.message})`);\n  }\n}", "// src/utils/Logger.ts\nvar nopLogger = {\n  debug: () => void 0,\n  info: () => void 0,\n  warn: () => void 0,\n  error: () => void 0\n};\nvar level;\nvar logger;\nvar Log = /* @__PURE__ */(Log2 => {\n  Log2[Log2[\"NONE\"] = 0] = \"NONE\";\n  Log2[Log2[\"ERROR\"] = 1] = \"ERROR\";\n  Log2[Log2[\"WARN\"] = 2] = \"WARN\";\n  Log2[Log2[\"INFO\"] = 3] = \"INFO\";\n  Log2[Log2[\"DEBUG\"] = 4] = \"DEBUG\";\n  return Log2;\n})(Log || {});\n(Log2 => {\n  function reset() {\n    level = 3 /* INFO */;\n    logger = nopLogger;\n  }\n  Log2.reset = reset;\n  function setLevel(value) {\n    if (!(0 /* NONE */ <= value && value <= 4 /* DEBUG */)) {\n      throw new Error(\"Invalid log level\");\n    }\n    level = value;\n  }\n  Log2.setLevel = setLevel;\n  function setLogger(value) {\n    logger = value;\n  }\n  Log2.setLogger = setLogger;\n})(Log || (Log = {}));\nvar Logger = class _Logger {\n  constructor(_name) {\n    this._name = _name;\n  }\n  /* eslint-disable @typescript-eslint/no-unsafe-enum-comparison */\n  debug(...args) {\n    if (level >= 4 /* DEBUG */) {\n      logger.debug(_Logger._format(this._name, this._method), ...args);\n    }\n  }\n  info(...args) {\n    if (level >= 3 /* INFO */) {\n      logger.info(_Logger._format(this._name, this._method), ...args);\n    }\n  }\n  warn(...args) {\n    if (level >= 2 /* WARN */) {\n      logger.warn(_Logger._format(this._name, this._method), ...args);\n    }\n  }\n  error(...args) {\n    if (level >= 1 /* ERROR */) {\n      logger.error(_Logger._format(this._name, this._method), ...args);\n    }\n  }\n  /* eslint-enable @typescript-eslint/no-unsafe-enum-comparison */\n  throw(err) {\n    this.error(err);\n    throw err;\n  }\n  create(method) {\n    const methodLogger = Object.create(this);\n    methodLogger._method = method;\n    methodLogger.debug(\"begin\");\n    return methodLogger;\n  }\n  static createStatic(name, staticMethod) {\n    const staticLogger = new _Logger(`${name}.${staticMethod}`);\n    staticLogger.debug(\"begin\");\n    return staticLogger;\n  }\n  static _format(name, method) {\n    const prefix = `[${name}]`;\n    return method ? `${prefix} ${method}:` : prefix;\n  }\n  /* eslint-disable @typescript-eslint/no-unsafe-enum-comparison */\n  // helpers for static class methods\n  static debug(name, ...args) {\n    if (level >= 4 /* DEBUG */) {\n      logger.debug(_Logger._format(name), ...args);\n    }\n  }\n  static info(name, ...args) {\n    if (level >= 3 /* INFO */) {\n      logger.info(_Logger._format(name), ...args);\n    }\n  }\n  static warn(name, ...args) {\n    if (level >= 2 /* WARN */) {\n      logger.warn(_Logger._format(name), ...args);\n    }\n  }\n  static error(name, ...args) {\n    if (level >= 1 /* ERROR */) {\n      logger.error(_Logger._format(name), ...args);\n    }\n  }\n  /* eslint-enable @typescript-eslint/no-unsafe-enum-comparison */\n};\nLog.reset();\n\n// src/utils/JwtUtils.ts\nimport { jwtDecode } from \"jwt-decode\";\nvar JwtUtils = class {\n  // IMPORTANT: doesn't validate the token\n  static decode(token) {\n    try {\n      return jwtDecode(token);\n    } catch (err) {\n      Logger.error(\"JwtUtils.decode\", err);\n      throw err;\n    }\n  }\n  static async generateSignedJwt(header, payload, privateKey) {\n    const encodedHeader = CryptoUtils.encodeBase64Url(new TextEncoder().encode(JSON.stringify(header)));\n    const encodedPayload = CryptoUtils.encodeBase64Url(new TextEncoder().encode(JSON.stringify(payload)));\n    const encodedToken = `${encodedHeader}.${encodedPayload}`;\n    const signature = await window.crypto.subtle.sign({\n      name: \"ECDSA\",\n      hash: {\n        name: \"SHA-256\"\n      }\n    }, privateKey, new TextEncoder().encode(encodedToken));\n    const encodedSignature = CryptoUtils.encodeBase64Url(new Uint8Array(signature));\n    return `${encodedToken}.${encodedSignature}`;\n  }\n};\n\n// src/utils/CryptoUtils.ts\nvar UUID_V4_TEMPLATE = \"10000000-1000-4000-8000-100000000000\";\nvar toBase64 = val => btoa([...new Uint8Array(val)].map(chr => String.fromCharCode(chr)).join(\"\"));\nvar _CryptoUtils = class _CryptoUtils {\n  static _randomWord() {\n    const arr = new Uint32Array(1);\n    crypto.getRandomValues(arr);\n    return arr[0];\n  }\n  /**\n   * Generates RFC4122 version 4 guid\n   */\n  static generateUUIDv4() {\n    const uuid = UUID_V4_TEMPLATE.replace(/[018]/g, c => (+c ^ _CryptoUtils._randomWord() & 15 >> +c / 4).toString(16));\n    return uuid.replace(/-/g, \"\");\n  }\n  /**\n   * PKCE: Generate a code verifier\n   */\n  static generateCodeVerifier() {\n    return _CryptoUtils.generateUUIDv4() + _CryptoUtils.generateUUIDv4() + _CryptoUtils.generateUUIDv4();\n  }\n  /**\n   * PKCE: Generate a code challenge\n   */\n  static async generateCodeChallenge(code_verifier) {\n    if (!crypto.subtle) {\n      throw new Error(\"Crypto.subtle is available only in secure contexts (HTTPS).\");\n    }\n    try {\n      const encoder = new TextEncoder();\n      const data = encoder.encode(code_verifier);\n      const hashed = await crypto.subtle.digest(\"SHA-256\", data);\n      return toBase64(hashed).replace(/\\+/g, \"-\").replace(/\\//g, \"_\").replace(/=+$/, \"\");\n    } catch (err) {\n      Logger.error(\"CryptoUtils.generateCodeChallenge\", err);\n      throw err;\n    }\n  }\n  /**\n   * Generates a base64-encoded string for a basic auth header\n   */\n  static generateBasicAuth(client_id, client_secret) {\n    const encoder = new TextEncoder();\n    const data = encoder.encode([client_id, client_secret].join(\":\"));\n    return toBase64(data);\n  }\n  /**\n   * Generates a hash of a string using a given algorithm\n   * @param alg\n   * @param message\n   */\n  static async hash(alg, message) {\n    const msgUint8 = new TextEncoder().encode(message);\n    const hashBuffer = await crypto.subtle.digest(alg, msgUint8);\n    return new Uint8Array(hashBuffer);\n  }\n  /**\n   * Generates a rfc7638 compliant jwk thumbprint\n   * @param jwk\n   */\n  static async customCalculateJwkThumbprint(jwk) {\n    let jsonObject;\n    switch (jwk.kty) {\n      case \"RSA\":\n        jsonObject = {\n          \"e\": jwk.e,\n          \"kty\": jwk.kty,\n          \"n\": jwk.n\n        };\n        break;\n      case \"EC\":\n        jsonObject = {\n          \"crv\": jwk.crv,\n          \"kty\": jwk.kty,\n          \"x\": jwk.x,\n          \"y\": jwk.y\n        };\n        break;\n      case \"OKP\":\n        jsonObject = {\n          \"crv\": jwk.crv,\n          \"kty\": jwk.kty,\n          \"x\": jwk.x\n        };\n        break;\n      case \"oct\":\n        jsonObject = {\n          \"crv\": jwk.k,\n          \"kty\": jwk.kty\n        };\n        break;\n      default:\n        throw new Error(\"Unknown jwk type\");\n    }\n    const utf8encodedAndHashed = await _CryptoUtils.hash(\"SHA-256\", JSON.stringify(jsonObject));\n    return _CryptoUtils.encodeBase64Url(utf8encodedAndHashed);\n  }\n  static async generateDPoPProof({\n    url,\n    accessToken,\n    httpMethod,\n    keyPair,\n    nonce\n  }) {\n    let hashedToken;\n    let encodedHash;\n    const payload = {\n      \"jti\": window.crypto.randomUUID(),\n      \"htm\": httpMethod != null ? httpMethod : \"GET\",\n      \"htu\": url,\n      \"iat\": Math.floor(Date.now() / 1e3)\n    };\n    if (accessToken) {\n      hashedToken = await _CryptoUtils.hash(\"SHA-256\", accessToken);\n      encodedHash = _CryptoUtils.encodeBase64Url(hashedToken);\n      payload.ath = encodedHash;\n    }\n    if (nonce) {\n      payload.nonce = nonce;\n    }\n    try {\n      const publicJwk = await crypto.subtle.exportKey(\"jwk\", keyPair.publicKey);\n      const header = {\n        \"alg\": \"ES256\",\n        \"typ\": \"dpop+jwt\",\n        \"jwk\": {\n          \"crv\": publicJwk.crv,\n          \"kty\": publicJwk.kty,\n          \"x\": publicJwk.x,\n          \"y\": publicJwk.y\n        }\n      };\n      return await JwtUtils.generateSignedJwt(header, payload, keyPair.privateKey);\n    } catch (err) {\n      if (err instanceof TypeError) {\n        throw new Error(`Error exporting dpop public key: ${err.message}`);\n      } else {\n        throw err;\n      }\n    }\n  }\n  static async generateDPoPJkt(keyPair) {\n    try {\n      const publicJwk = await crypto.subtle.exportKey(\"jwk\", keyPair.publicKey);\n      return await _CryptoUtils.customCalculateJwkThumbprint(publicJwk);\n    } catch (err) {\n      if (err instanceof TypeError) {\n        throw new Error(`Could not retrieve dpop keys from storage: ${err.message}`);\n      } else {\n        throw err;\n      }\n    }\n  }\n  static async generateDPoPKeys() {\n    return await window.crypto.subtle.generateKey({\n      name: \"ECDSA\",\n      namedCurve: \"P-256\"\n    }, false, [\"sign\", \"verify\"]);\n  }\n};\n/**\n * Generates a base64url encoded string\n */\n_CryptoUtils.encodeBase64Url = input => {\n  return toBase64(input).replace(/=/g, \"\").replace(/\\+/g, \"-\").replace(/\\//g, \"_\");\n};\nvar CryptoUtils = _CryptoUtils;\n\n// src/utils/Event.ts\nvar Event = class {\n  constructor(_name) {\n    this._name = _name;\n    this._callbacks = [];\n    this._logger = new Logger(`Event('${this._name}')`);\n  }\n  addHandler(cb) {\n    this._callbacks.push(cb);\n    return () => this.removeHandler(cb);\n  }\n  removeHandler(cb) {\n    const idx = this._callbacks.lastIndexOf(cb);\n    if (idx >= 0) {\n      this._callbacks.splice(idx, 1);\n    }\n  }\n  async raise(...ev) {\n    this._logger.debug(\"raise:\", ...ev);\n    for (const cb of this._callbacks) {\n      await cb(...ev);\n    }\n  }\n};\n\n// src/utils/PopupUtils.ts\nvar PopupUtils = class {\n  /**\n   * Populates a map of window features with a placement centered in front of\n   * the current window. If no explicit width is given, a default value is\n   * binned into [800, 720, 600, 480, 360] based on the current window's width.\n   */\n  static center({\n    ...features\n  }) {\n    var _a, _b, _c;\n    if (features.width == null) features.width = (_a = [800, 720, 600, 480].find(width => width <= window.outerWidth / 1.618)) != null ? _a : 360;\n    (_b = features.left) != null ? _b : features.left = Math.max(0, Math.round(window.screenX + (window.outerWidth - features.width) / 2));\n    if (features.height != null) (_c = features.top) != null ? _c : features.top = Math.max(0, Math.round(window.screenY + (window.outerHeight - features.height) / 2));\n    return features;\n  }\n  static serialize(features) {\n    return Object.entries(features).filter(([, value]) => value != null).map(([key, value]) => `${key}=${typeof value !== \"boolean\" ? value : value ? \"yes\" : \"no\"}`).join(\",\");\n  }\n};\n\n// src/utils/Timer.ts\nvar Timer = class _Timer extends Event {\n  constructor() {\n    super(...arguments);\n    this._logger = new Logger(`Timer('${this._name}')`);\n    this._timerHandle = null;\n    this._expiration = 0;\n    this._callback = () => {\n      const diff = this._expiration - _Timer.getEpochTime();\n      this._logger.debug(\"timer completes in\", diff);\n      if (this._expiration <= _Timer.getEpochTime()) {\n        this.cancel();\n        void super.raise();\n      }\n    };\n  }\n  // get the time\n  static getEpochTime() {\n    return Math.floor(Date.now() / 1e3);\n  }\n  init(durationInSeconds) {\n    const logger2 = this._logger.create(\"init\");\n    durationInSeconds = Math.max(Math.floor(durationInSeconds), 1);\n    const expiration = _Timer.getEpochTime() + durationInSeconds;\n    if (this.expiration === expiration && this._timerHandle) {\n      logger2.debug(\"skipping since already initialized for expiration at\", this.expiration);\n      return;\n    }\n    this.cancel();\n    logger2.debug(\"using duration\", durationInSeconds);\n    this._expiration = expiration;\n    const timerDurationInSeconds = Math.min(durationInSeconds, 5);\n    this._timerHandle = setInterval(this._callback, timerDurationInSeconds * 1e3);\n  }\n  get expiration() {\n    return this._expiration;\n  }\n  cancel() {\n    this._logger.create(\"cancel\");\n    if (this._timerHandle) {\n      clearInterval(this._timerHandle);\n      this._timerHandle = null;\n    }\n  }\n};\n\n// src/utils/UrlUtils.ts\nvar UrlUtils = class {\n  static readParams(url, responseMode = \"query\") {\n    if (!url) throw new TypeError(\"Invalid URL\");\n    const parsedUrl = new URL(url, \"http://127.0.0.1\");\n    const params = parsedUrl[responseMode === \"fragment\" ? \"hash\" : \"search\"];\n    return new URLSearchParams(params.slice(1));\n  }\n};\nvar URL_STATE_DELIMITER = \";\";\n\n// src/errors/ErrorResponse.ts\nvar ErrorResponse = class extends Error {\n  constructor(args, form) {\n    var _a, _b, _c;\n    super(args.error_description || args.error || \"\");\n    this.form = form;\n    /** Marker to detect class: \"ErrorResponse\" */\n    this.name = \"ErrorResponse\";\n    if (!args.error) {\n      Logger.error(\"ErrorResponse\", \"No error passed\");\n      throw new Error(\"No error passed\");\n    }\n    this.error = args.error;\n    this.error_description = (_a = args.error_description) != null ? _a : null;\n    this.error_uri = (_b = args.error_uri) != null ? _b : null;\n    this.state = args.userState;\n    this.session_state = (_c = args.session_state) != null ? _c : null;\n    this.url_state = args.url_state;\n  }\n};\n\n// src/errors/ErrorTimeout.ts\nvar ErrorTimeout = class extends Error {\n  constructor(message) {\n    super(message);\n    /** Marker to detect class: \"ErrorTimeout\" */\n    this.name = \"ErrorTimeout\";\n  }\n};\n\n// src/AccessTokenEvents.ts\nvar AccessTokenEvents = class {\n  constructor(args) {\n    this._logger = new Logger(\"AccessTokenEvents\");\n    this._expiringTimer = new Timer(\"Access token expiring\");\n    this._expiredTimer = new Timer(\"Access token expired\");\n    this._expiringNotificationTimeInSeconds = args.expiringNotificationTimeInSeconds;\n  }\n  load(container) {\n    const logger2 = this._logger.create(\"load\");\n    if (container.access_token && container.expires_in !== void 0) {\n      const duration = container.expires_in;\n      logger2.debug(\"access token present, remaining duration:\", duration);\n      if (duration > 0) {\n        let expiring = duration - this._expiringNotificationTimeInSeconds;\n        if (expiring <= 0) {\n          expiring = 1;\n        }\n        logger2.debug(\"registering expiring timer, raising in\", expiring, \"seconds\");\n        this._expiringTimer.init(expiring);\n      } else {\n        logger2.debug(\"canceling existing expiring timer because we're past expiration.\");\n        this._expiringTimer.cancel();\n      }\n      const expired = duration + 1;\n      logger2.debug(\"registering expired timer, raising in\", expired, \"seconds\");\n      this._expiredTimer.init(expired);\n    } else {\n      this._expiringTimer.cancel();\n      this._expiredTimer.cancel();\n    }\n  }\n  unload() {\n    this._logger.debug(\"unload: canceling existing access token timers\");\n    this._expiringTimer.cancel();\n    this._expiredTimer.cancel();\n  }\n  /**\n   * Add callback: Raised prior to the access token expiring.\n   */\n  addAccessTokenExpiring(cb) {\n    return this._expiringTimer.addHandler(cb);\n  }\n  /**\n   * Remove callback: Raised prior to the access token expiring.\n   */\n  removeAccessTokenExpiring(cb) {\n    this._expiringTimer.removeHandler(cb);\n  }\n  /**\n   * Add callback: Raised after the access token has expired.\n   */\n  addAccessTokenExpired(cb) {\n    return this._expiredTimer.addHandler(cb);\n  }\n  /**\n   * Remove callback: Raised after the access token has expired.\n   */\n  removeAccessTokenExpired(cb) {\n    this._expiredTimer.removeHandler(cb);\n  }\n};\n\n// src/CheckSessionIFrame.ts\nvar CheckSessionIFrame = class {\n  constructor(_callback, _client_id, url, _intervalInSeconds, _stopOnError) {\n    this._callback = _callback;\n    this._client_id = _client_id;\n    this._intervalInSeconds = _intervalInSeconds;\n    this._stopOnError = _stopOnError;\n    this._logger = new Logger(\"CheckSessionIFrame\");\n    this._timer = null;\n    this._session_state = null;\n    this._message = e => {\n      if (e.origin === this._frame_origin && e.source === this._frame.contentWindow) {\n        if (e.data === \"error\") {\n          this._logger.error(\"error message from check session op iframe\");\n          if (this._stopOnError) {\n            this.stop();\n          }\n        } else if (e.data === \"changed\") {\n          this._logger.debug(\"changed message from check session op iframe\");\n          this.stop();\n          void this._callback();\n        } else {\n          this._logger.debug(e.data + \" message from check session op iframe\");\n        }\n      }\n    };\n    const parsedUrl = new URL(url);\n    this._frame_origin = parsedUrl.origin;\n    this._frame = window.document.createElement(\"iframe\");\n    this._frame.style.visibility = \"hidden\";\n    this._frame.style.position = \"fixed\";\n    this._frame.style.left = \"-1000px\";\n    this._frame.style.top = \"0\";\n    this._frame.width = \"0\";\n    this._frame.height = \"0\";\n    this._frame.src = parsedUrl.href;\n  }\n  load() {\n    return new Promise(resolve => {\n      this._frame.onload = () => {\n        resolve();\n      };\n      window.document.body.appendChild(this._frame);\n      window.addEventListener(\"message\", this._message, false);\n    });\n  }\n  start(session_state) {\n    if (this._session_state === session_state) {\n      return;\n    }\n    this._logger.create(\"start\");\n    this.stop();\n    this._session_state = session_state;\n    const send = () => {\n      if (!this._frame.contentWindow || !this._session_state) {\n        return;\n      }\n      this._frame.contentWindow.postMessage(this._client_id + \" \" + this._session_state, this._frame_origin);\n    };\n    send();\n    this._timer = setInterval(send, this._intervalInSeconds * 1e3);\n  }\n  stop() {\n    this._logger.create(\"stop\");\n    this._session_state = null;\n    if (this._timer) {\n      clearInterval(this._timer);\n      this._timer = null;\n    }\n  }\n};\n\n// src/InMemoryWebStorage.ts\nvar InMemoryWebStorage = class {\n  constructor() {\n    this._logger = new Logger(\"InMemoryWebStorage\");\n    this._data = {};\n  }\n  clear() {\n    this._logger.create(\"clear\");\n    this._data = {};\n  }\n  getItem(key) {\n    this._logger.create(`getItem('${key}')`);\n    return this._data[key];\n  }\n  setItem(key, value) {\n    this._logger.create(`setItem('${key}')`);\n    this._data[key] = value;\n  }\n  removeItem(key) {\n    this._logger.create(`removeItem('${key}')`);\n    delete this._data[key];\n  }\n  get length() {\n    return Object.getOwnPropertyNames(this._data).length;\n  }\n  key(index) {\n    return Object.getOwnPropertyNames(this._data)[index];\n  }\n};\n\n// src/errors/ErrorDPoPNonce.ts\nvar ErrorDPoPNonce = class extends Error {\n  constructor(nonce, message) {\n    super(message);\n    /** Marker to detect class: \"ErrorDPoPNonce\" */\n    this.name = \"ErrorDPoPNonce\";\n    this.nonce = nonce;\n  }\n};\n\n// src/JsonService.ts\nvar JsonService = class {\n  constructor(additionalContentTypes = [], _jwtHandler = null, _extraHeaders = {}) {\n    this._jwtHandler = _jwtHandler;\n    this._extraHeaders = _extraHeaders;\n    this._logger = new Logger(\"JsonService\");\n    this._contentTypes = [];\n    this._contentTypes.push(...additionalContentTypes, \"application/json\");\n    if (_jwtHandler) {\n      this._contentTypes.push(\"application/jwt\");\n    }\n  }\n  async fetchWithTimeout(input, init = {}) {\n    const {\n      timeoutInSeconds,\n      ...initFetch\n    } = init;\n    if (!timeoutInSeconds) {\n      return await fetch(input, initFetch);\n    }\n    const controller = new AbortController();\n    const timeoutId = setTimeout(() => controller.abort(), timeoutInSeconds * 1e3);\n    try {\n      const response = await fetch(input, {\n        ...init,\n        signal: controller.signal\n      });\n      return response;\n    } catch (err) {\n      if (err instanceof DOMException && err.name === \"AbortError\") {\n        throw new ErrorTimeout(\"Network timed out\");\n      }\n      throw err;\n    } finally {\n      clearTimeout(timeoutId);\n    }\n  }\n  async getJson(url, {\n    token,\n    credentials,\n    timeoutInSeconds\n  } = {}) {\n    const logger2 = this._logger.create(\"getJson\");\n    const headers = {\n      \"Accept\": this._contentTypes.join(\", \")\n    };\n    if (token) {\n      logger2.debug(\"token passed, setting Authorization header\");\n      headers[\"Authorization\"] = \"Bearer \" + token;\n    }\n    this.appendExtraHeaders(headers);\n    let response;\n    try {\n      logger2.debug(\"url:\", url);\n      response = await this.fetchWithTimeout(url, {\n        method: \"GET\",\n        headers,\n        timeoutInSeconds,\n        credentials\n      });\n    } catch (err) {\n      logger2.error(\"Network Error\");\n      throw err;\n    }\n    logger2.debug(\"HTTP response received, status\", response.status);\n    const contentType = response.headers.get(\"Content-Type\");\n    if (contentType && !this._contentTypes.find(item => contentType.startsWith(item))) {\n      logger2.throw(new Error(`Invalid response Content-Type: ${contentType != null ? contentType : \"undefined\"}, from URL: ${url}`));\n    }\n    if (response.ok && this._jwtHandler && (contentType == null ? void 0 : contentType.startsWith(\"application/jwt\"))) {\n      return await this._jwtHandler(await response.text());\n    }\n    let json;\n    try {\n      json = await response.json();\n    } catch (err) {\n      logger2.error(\"Error parsing JSON response\", err);\n      if (response.ok) throw err;\n      throw new Error(`${response.statusText} (${response.status})`);\n    }\n    if (!response.ok) {\n      logger2.error(\"Error from server:\", json);\n      if (json.error) {\n        throw new ErrorResponse(json);\n      }\n      throw new Error(`${response.statusText} (${response.status}): ${JSON.stringify(json)}`);\n    }\n    return json;\n  }\n  async postForm(url, {\n    body,\n    basicAuth,\n    timeoutInSeconds,\n    initCredentials,\n    extraHeaders\n  }) {\n    const logger2 = this._logger.create(\"postForm\");\n    const headers = {\n      \"Accept\": this._contentTypes.join(\", \"),\n      \"Content-Type\": \"application/x-www-form-urlencoded\",\n      ...extraHeaders\n    };\n    if (basicAuth !== void 0) {\n      headers[\"Authorization\"] = \"Basic \" + basicAuth;\n    }\n    this.appendExtraHeaders(headers);\n    let response;\n    try {\n      logger2.debug(\"url:\", url);\n      response = await this.fetchWithTimeout(url, {\n        method: \"POST\",\n        headers,\n        body,\n        timeoutInSeconds,\n        credentials: initCredentials\n      });\n    } catch (err) {\n      logger2.error(\"Network error\");\n      throw err;\n    }\n    logger2.debug(\"HTTP response received, status\", response.status);\n    const contentType = response.headers.get(\"Content-Type\");\n    if (contentType && !this._contentTypes.find(item => contentType.startsWith(item))) {\n      throw new Error(`Invalid response Content-Type: ${contentType != null ? contentType : \"undefined\"}, from URL: ${url}`);\n    }\n    const responseText = await response.text();\n    let json = {};\n    if (responseText) {\n      try {\n        json = JSON.parse(responseText);\n      } catch (err) {\n        logger2.error(\"Error parsing JSON response\", err);\n        if (response.ok) throw err;\n        throw new Error(`${response.statusText} (${response.status})`);\n      }\n    }\n    if (!response.ok) {\n      logger2.error(\"Error from server:\", json);\n      if (response.headers.has(\"dpop-nonce\")) {\n        const nonce = response.headers.get(\"dpop-nonce\");\n        throw new ErrorDPoPNonce(nonce, `${JSON.stringify(json)}`);\n      }\n      if (json.error) {\n        throw new ErrorResponse(json, body);\n      }\n      throw new Error(`${response.statusText} (${response.status}): ${JSON.stringify(json)}`);\n    }\n    return json;\n  }\n  appendExtraHeaders(headers) {\n    const logger2 = this._logger.create(\"appendExtraHeaders\");\n    const customKeys = Object.keys(this._extraHeaders);\n    const protectedHeaders = [\"authorization\", \"accept\", \"content-type\"];\n    if (customKeys.length === 0) {\n      return;\n    }\n    customKeys.forEach(headerName => {\n      if (protectedHeaders.includes(headerName.toLocaleLowerCase())) {\n        logger2.warn(\"Protected header could not be overridden\", headerName, protectedHeaders);\n        return;\n      }\n      const content = typeof this._extraHeaders[headerName] === \"function\" ? this._extraHeaders[headerName]() : this._extraHeaders[headerName];\n      if (content && content !== \"\") {\n        headers[headerName] = content;\n      }\n    });\n  }\n};\n\n// src/MetadataService.ts\nvar MetadataService = class {\n  constructor(_settings) {\n    this._settings = _settings;\n    this._logger = new Logger(\"MetadataService\");\n    this._signingKeys = null;\n    this._metadata = null;\n    this._metadataUrl = this._settings.metadataUrl;\n    this._jsonService = new JsonService([\"application/jwk-set+json\"], null, this._settings.extraHeaders);\n    if (this._settings.signingKeys) {\n      this._logger.debug(\"using signingKeys from settings\");\n      this._signingKeys = this._settings.signingKeys;\n    }\n    if (this._settings.metadata) {\n      this._logger.debug(\"using metadata from settings\");\n      this._metadata = this._settings.metadata;\n    }\n    if (this._settings.fetchRequestCredentials) {\n      this._logger.debug(\"using fetchRequestCredentials from settings\");\n      this._fetchRequestCredentials = this._settings.fetchRequestCredentials;\n    }\n  }\n  resetSigningKeys() {\n    this._signingKeys = null;\n  }\n  async getMetadata() {\n    const logger2 = this._logger.create(\"getMetadata\");\n    if (this._metadata) {\n      logger2.debug(\"using cached values\");\n      return this._metadata;\n    }\n    if (!this._metadataUrl) {\n      logger2.throw(new Error(\"No authority or metadataUrl configured on settings\"));\n      throw null;\n    }\n    logger2.debug(\"getting metadata from\", this._metadataUrl);\n    const metadata = await this._jsonService.getJson(this._metadataUrl, {\n      credentials: this._fetchRequestCredentials,\n      timeoutInSeconds: this._settings.requestTimeoutInSeconds\n    });\n    logger2.debug(\"merging remote JSON with seed metadata\");\n    this._metadata = Object.assign({}, this._settings.metadataSeed, metadata);\n    return this._metadata;\n  }\n  getIssuer() {\n    return this._getMetadataProperty(\"issuer\");\n  }\n  getAuthorizationEndpoint() {\n    return this._getMetadataProperty(\"authorization_endpoint\");\n  }\n  getUserInfoEndpoint() {\n    return this._getMetadataProperty(\"userinfo_endpoint\");\n  }\n  getTokenEndpoint(optional = true) {\n    return this._getMetadataProperty(\"token_endpoint\", optional);\n  }\n  getCheckSessionIframe() {\n    return this._getMetadataProperty(\"check_session_iframe\", true);\n  }\n  getEndSessionEndpoint() {\n    return this._getMetadataProperty(\"end_session_endpoint\", true);\n  }\n  getRevocationEndpoint(optional = true) {\n    return this._getMetadataProperty(\"revocation_endpoint\", optional);\n  }\n  getKeysEndpoint(optional = true) {\n    return this._getMetadataProperty(\"jwks_uri\", optional);\n  }\n  async _getMetadataProperty(name, optional = false) {\n    const logger2 = this._logger.create(`_getMetadataProperty('${name}')`);\n    const metadata = await this.getMetadata();\n    logger2.debug(\"resolved\");\n    if (metadata[name] === void 0) {\n      if (optional === true) {\n        logger2.warn(\"Metadata does not contain optional property\");\n        return void 0;\n      }\n      logger2.throw(new Error(\"Metadata does not contain property \" + name));\n    }\n    return metadata[name];\n  }\n  async getSigningKeys() {\n    const logger2 = this._logger.create(\"getSigningKeys\");\n    if (this._signingKeys) {\n      logger2.debug(\"returning signingKeys from cache\");\n      return this._signingKeys;\n    }\n    const jwks_uri = await this.getKeysEndpoint(false);\n    logger2.debug(\"got jwks_uri\", jwks_uri);\n    const keySet = await this._jsonService.getJson(jwks_uri, {\n      timeoutInSeconds: this._settings.requestTimeoutInSeconds\n    });\n    logger2.debug(\"got key set\", keySet);\n    if (!Array.isArray(keySet.keys)) {\n      logger2.throw(new Error(\"Missing keys on keyset\"));\n      throw null;\n    }\n    this._signingKeys = keySet.keys;\n    return this._signingKeys;\n  }\n};\n\n// src/WebStorageStateStore.ts\nvar WebStorageStateStore = class {\n  constructor({\n    prefix = \"oidc.\",\n    store = localStorage\n  } = {}) {\n    this._logger = new Logger(\"WebStorageStateStore\");\n    this._store = store;\n    this._prefix = prefix;\n  }\n  async set(key, value) {\n    this._logger.create(`set('${key}')`);\n    key = this._prefix + key;\n    await this._store.setItem(key, value);\n  }\n  async get(key) {\n    this._logger.create(`get('${key}')`);\n    key = this._prefix + key;\n    const item = await this._store.getItem(key);\n    return item;\n  }\n  async remove(key) {\n    this._logger.create(`remove('${key}')`);\n    key = this._prefix + key;\n    const item = await this._store.getItem(key);\n    await this._store.removeItem(key);\n    return item;\n  }\n  async getAllKeys() {\n    this._logger.create(\"getAllKeys\");\n    const len = await this._store.length;\n    const keys = [];\n    for (let index = 0; index < len; index++) {\n      const key = await this._store.key(index);\n      if (key && key.indexOf(this._prefix) === 0) {\n        keys.push(key.substr(this._prefix.length));\n      }\n    }\n    return keys;\n  }\n};\n\n// src/OidcClientSettings.ts\nvar DefaultResponseType = \"code\";\nvar DefaultScope = \"openid\";\nvar DefaultClientAuthentication = \"client_secret_post\";\nvar DefaultStaleStateAgeInSeconds = 60 * 15;\nvar OidcClientSettingsStore = class {\n  constructor({\n    // metadata related\n    authority,\n    metadataUrl,\n    metadata,\n    signingKeys,\n    metadataSeed,\n    // client related\n    client_id,\n    client_secret,\n    response_type = DefaultResponseType,\n    scope = DefaultScope,\n    redirect_uri,\n    post_logout_redirect_uri,\n    client_authentication = DefaultClientAuthentication,\n    // optional protocol\n    prompt,\n    display,\n    max_age,\n    ui_locales,\n    acr_values,\n    resource,\n    response_mode,\n    // behavior flags\n    filterProtocolClaims = true,\n    loadUserInfo = false,\n    requestTimeoutInSeconds,\n    staleStateAgeInSeconds = DefaultStaleStateAgeInSeconds,\n    mergeClaimsStrategy = {\n      array: \"replace\"\n    },\n    disablePKCE = false,\n    // other behavior\n    stateStore,\n    revokeTokenAdditionalContentTypes,\n    fetchRequestCredentials,\n    refreshTokenAllowedScope,\n    // extra\n    extraQueryParams = {},\n    extraTokenParams = {},\n    extraHeaders = {},\n    dpop,\n    omitScopeWhenRequesting = false\n  }) {\n    var _a;\n    this.authority = authority;\n    if (metadataUrl) {\n      this.metadataUrl = metadataUrl;\n    } else {\n      this.metadataUrl = authority;\n      if (authority) {\n        if (!this.metadataUrl.endsWith(\"/\")) {\n          this.metadataUrl += \"/\";\n        }\n        this.metadataUrl += \".well-known/openid-configuration\";\n      }\n    }\n    this.metadata = metadata;\n    this.metadataSeed = metadataSeed;\n    this.signingKeys = signingKeys;\n    this.client_id = client_id;\n    this.client_secret = client_secret;\n    this.response_type = response_type;\n    this.scope = scope;\n    this.redirect_uri = redirect_uri;\n    this.post_logout_redirect_uri = post_logout_redirect_uri;\n    this.client_authentication = client_authentication;\n    this.prompt = prompt;\n    this.display = display;\n    this.max_age = max_age;\n    this.ui_locales = ui_locales;\n    this.acr_values = acr_values;\n    this.resource = resource;\n    this.response_mode = response_mode;\n    this.filterProtocolClaims = filterProtocolClaims != null ? filterProtocolClaims : true;\n    this.loadUserInfo = !!loadUserInfo;\n    this.staleStateAgeInSeconds = staleStateAgeInSeconds;\n    this.mergeClaimsStrategy = mergeClaimsStrategy;\n    this.omitScopeWhenRequesting = omitScopeWhenRequesting;\n    this.disablePKCE = !!disablePKCE;\n    this.revokeTokenAdditionalContentTypes = revokeTokenAdditionalContentTypes;\n    this.fetchRequestCredentials = fetchRequestCredentials ? fetchRequestCredentials : \"same-origin\";\n    this.requestTimeoutInSeconds = requestTimeoutInSeconds;\n    if (stateStore) {\n      this.stateStore = stateStore;\n    } else {\n      const store = typeof window !== \"undefined\" ? window.localStorage : new InMemoryWebStorage();\n      this.stateStore = new WebStorageStateStore({\n        store\n      });\n    }\n    this.refreshTokenAllowedScope = refreshTokenAllowedScope;\n    this.extraQueryParams = extraQueryParams;\n    this.extraTokenParams = extraTokenParams;\n    this.extraHeaders = extraHeaders;\n    this.dpop = dpop;\n    if (this.dpop && !((_a = this.dpop) == null ? void 0 : _a.store)) {\n      throw new Error(\"A DPoPStore is required when dpop is enabled\");\n    }\n  }\n};\n\n// src/UserInfoService.ts\nvar UserInfoService = class {\n  constructor(_settings, _metadataService) {\n    this._settings = _settings;\n    this._metadataService = _metadataService;\n    this._logger = new Logger(\"UserInfoService\");\n    this._getClaimsFromJwt = async responseText => {\n      const logger2 = this._logger.create(\"_getClaimsFromJwt\");\n      try {\n        const payload = JwtUtils.decode(responseText);\n        logger2.debug(\"JWT decoding successful\");\n        return payload;\n      } catch (err) {\n        logger2.error(\"Error parsing JWT response\");\n        throw err;\n      }\n    };\n    this._jsonService = new JsonService(void 0, this._getClaimsFromJwt, this._settings.extraHeaders);\n  }\n  async getClaims(token) {\n    const logger2 = this._logger.create(\"getClaims\");\n    if (!token) {\n      this._logger.throw(new Error(\"No token passed\"));\n    }\n    const url = await this._metadataService.getUserInfoEndpoint();\n    logger2.debug(\"got userinfo url\", url);\n    const claims = await this._jsonService.getJson(url, {\n      token,\n      credentials: this._settings.fetchRequestCredentials,\n      timeoutInSeconds: this._settings.requestTimeoutInSeconds\n    });\n    logger2.debug(\"got claims\", claims);\n    return claims;\n  }\n};\n\n// src/TokenClient.ts\nvar TokenClient = class {\n  constructor(_settings, _metadataService) {\n    this._settings = _settings;\n    this._metadataService = _metadataService;\n    this._logger = new Logger(\"TokenClient\");\n    this._jsonService = new JsonService(this._settings.revokeTokenAdditionalContentTypes, null, this._settings.extraHeaders);\n  }\n  /**\n   * Exchange code.\n   *\n   * @see https://www.rfc-editor.org/rfc/rfc6749#section-4.1.3\n   */\n  async exchangeCode({\n    grant_type = \"authorization_code\",\n    redirect_uri = this._settings.redirect_uri,\n    client_id = this._settings.client_id,\n    client_secret = this._settings.client_secret,\n    extraHeaders,\n    ...args\n  }) {\n    const logger2 = this._logger.create(\"exchangeCode\");\n    if (!client_id) {\n      logger2.throw(new Error(\"A client_id is required\"));\n    }\n    if (!redirect_uri) {\n      logger2.throw(new Error(\"A redirect_uri is required\"));\n    }\n    if (!args.code) {\n      logger2.throw(new Error(\"A code is required\"));\n    }\n    const params = new URLSearchParams({\n      grant_type,\n      redirect_uri\n    });\n    for (const [key, value] of Object.entries(args)) {\n      if (value != null) {\n        params.set(key, value);\n      }\n    }\n    let basicAuth;\n    switch (this._settings.client_authentication) {\n      case \"client_secret_basic\":\n        if (!client_secret) {\n          logger2.throw(new Error(\"A client_secret is required\"));\n          throw null;\n        }\n        basicAuth = CryptoUtils.generateBasicAuth(client_id, client_secret);\n        break;\n      case \"client_secret_post\":\n        params.append(\"client_id\", client_id);\n        if (client_secret) {\n          params.append(\"client_secret\", client_secret);\n        }\n        break;\n    }\n    const url = await this._metadataService.getTokenEndpoint(false);\n    logger2.debug(\"got token endpoint\");\n    const response = await this._jsonService.postForm(url, {\n      body: params,\n      basicAuth,\n      timeoutInSeconds: this._settings.requestTimeoutInSeconds,\n      initCredentials: this._settings.fetchRequestCredentials,\n      extraHeaders\n    });\n    logger2.debug(\"got response\");\n    return response;\n  }\n  /**\n   * Exchange credentials.\n   *\n   * @see https://www.rfc-editor.org/rfc/rfc6749#section-4.3.2\n   */\n  async exchangeCredentials({\n    grant_type = \"password\",\n    client_id = this._settings.client_id,\n    client_secret = this._settings.client_secret,\n    scope = this._settings.scope,\n    ...args\n  }) {\n    const logger2 = this._logger.create(\"exchangeCredentials\");\n    if (!client_id) {\n      logger2.throw(new Error(\"A client_id is required\"));\n    }\n    const params = new URLSearchParams({\n      grant_type\n    });\n    if (!this._settings.omitScopeWhenRequesting) {\n      params.set(\"scope\", scope);\n    }\n    for (const [key, value] of Object.entries(args)) {\n      if (value != null) {\n        params.set(key, value);\n      }\n    }\n    let basicAuth;\n    switch (this._settings.client_authentication) {\n      case \"client_secret_basic\":\n        if (!client_secret) {\n          logger2.throw(new Error(\"A client_secret is required\"));\n          throw null;\n        }\n        basicAuth = CryptoUtils.generateBasicAuth(client_id, client_secret);\n        break;\n      case \"client_secret_post\":\n        params.append(\"client_id\", client_id);\n        if (client_secret) {\n          params.append(\"client_secret\", client_secret);\n        }\n        break;\n    }\n    const url = await this._metadataService.getTokenEndpoint(false);\n    logger2.debug(\"got token endpoint\");\n    const response = await this._jsonService.postForm(url, {\n      body: params,\n      basicAuth,\n      timeoutInSeconds: this._settings.requestTimeoutInSeconds,\n      initCredentials: this._settings.fetchRequestCredentials\n    });\n    logger2.debug(\"got response\");\n    return response;\n  }\n  /**\n   * Exchange a refresh token.\n   *\n   * @see https://www.rfc-editor.org/rfc/rfc6749#section-6\n   */\n  async exchangeRefreshToken({\n    grant_type = \"refresh_token\",\n    client_id = this._settings.client_id,\n    client_secret = this._settings.client_secret,\n    timeoutInSeconds,\n    extraHeaders,\n    ...args\n  }) {\n    const logger2 = this._logger.create(\"exchangeRefreshToken\");\n    if (!client_id) {\n      logger2.throw(new Error(\"A client_id is required\"));\n    }\n    if (!args.refresh_token) {\n      logger2.throw(new Error(\"A refresh_token is required\"));\n    }\n    const params = new URLSearchParams({\n      grant_type\n    });\n    for (const [key, value] of Object.entries(args)) {\n      if (Array.isArray(value)) {\n        value.forEach(param => params.append(key, param));\n      } else if (value != null) {\n        params.set(key, value);\n      }\n    }\n    let basicAuth;\n    switch (this._settings.client_authentication) {\n      case \"client_secret_basic\":\n        if (!client_secret) {\n          logger2.throw(new Error(\"A client_secret is required\"));\n          throw null;\n        }\n        basicAuth = CryptoUtils.generateBasicAuth(client_id, client_secret);\n        break;\n      case \"client_secret_post\":\n        params.append(\"client_id\", client_id);\n        if (client_secret) {\n          params.append(\"client_secret\", client_secret);\n        }\n        break;\n    }\n    const url = await this._metadataService.getTokenEndpoint(false);\n    logger2.debug(\"got token endpoint\");\n    const response = await this._jsonService.postForm(url, {\n      body: params,\n      basicAuth,\n      timeoutInSeconds,\n      initCredentials: this._settings.fetchRequestCredentials,\n      extraHeaders\n    });\n    logger2.debug(\"got response\");\n    return response;\n  }\n  /**\n   * Revoke an access or refresh token.\n   *\n   * @see https://datatracker.ietf.org/doc/html/rfc7009#section-2.1\n   */\n  async revoke(args) {\n    var _a;\n    const logger2 = this._logger.create(\"revoke\");\n    if (!args.token) {\n      logger2.throw(new Error(\"A token is required\"));\n    }\n    const url = await this._metadataService.getRevocationEndpoint(false);\n    logger2.debug(`got revocation endpoint, revoking ${(_a = args.token_type_hint) != null ? _a : \"default token type\"}`);\n    const params = new URLSearchParams();\n    for (const [key, value] of Object.entries(args)) {\n      if (value != null) {\n        params.set(key, value);\n      }\n    }\n    params.set(\"client_id\", this._settings.client_id);\n    if (this._settings.client_secret) {\n      params.set(\"client_secret\", this._settings.client_secret);\n    }\n    await this._jsonService.postForm(url, {\n      body: params,\n      timeoutInSeconds: this._settings.requestTimeoutInSeconds\n    });\n    logger2.debug(\"got response\");\n  }\n};\n\n// src/ResponseValidator.ts\nvar ResponseValidator = class {\n  constructor(_settings, _metadataService, _claimsService) {\n    this._settings = _settings;\n    this._metadataService = _metadataService;\n    this._claimsService = _claimsService;\n    this._logger = new Logger(\"ResponseValidator\");\n    this._userInfoService = new UserInfoService(this._settings, this._metadataService);\n    this._tokenClient = new TokenClient(this._settings, this._metadataService);\n  }\n  async validateSigninResponse(response, state, extraHeaders) {\n    const logger2 = this._logger.create(\"validateSigninResponse\");\n    this._processSigninState(response, state);\n    logger2.debug(\"state processed\");\n    await this._processCode(response, state, extraHeaders);\n    logger2.debug(\"code processed\");\n    if (response.isOpenId) {\n      this._validateIdTokenAttributes(response);\n    }\n    logger2.debug(\"tokens validated\");\n    await this._processClaims(response, state == null ? void 0 : state.skipUserInfo, response.isOpenId);\n    logger2.debug(\"claims processed\");\n  }\n  async validateCredentialsResponse(response, skipUserInfo) {\n    const logger2 = this._logger.create(\"validateCredentialsResponse\");\n    if (response.isOpenId && !!response.id_token) {\n      this._validateIdTokenAttributes(response);\n    }\n    logger2.debug(\"tokens validated\");\n    await this._processClaims(response, skipUserInfo, response.isOpenId);\n    logger2.debug(\"claims processed\");\n  }\n  async validateRefreshResponse(response, state) {\n    var _a, _b;\n    const logger2 = this._logger.create(\"validateRefreshResponse\");\n    response.userState = state.data;\n    (_a = response.session_state) != null ? _a : response.session_state = state.session_state;\n    (_b = response.scope) != null ? _b : response.scope = state.scope;\n    if (response.isOpenId && !!response.id_token) {\n      this._validateIdTokenAttributes(response, state.id_token);\n      logger2.debug(\"ID Token validated\");\n    }\n    if (!response.id_token) {\n      response.id_token = state.id_token;\n      response.profile = state.profile;\n    }\n    const hasIdToken = response.isOpenId && !!response.id_token;\n    await this._processClaims(response, false, hasIdToken);\n    logger2.debug(\"claims processed\");\n  }\n  validateSignoutResponse(response, state) {\n    const logger2 = this._logger.create(\"validateSignoutResponse\");\n    if (state.id !== response.state) {\n      logger2.throw(new Error(\"State does not match\"));\n    }\n    logger2.debug(\"state validated\");\n    response.userState = state.data;\n    if (response.error) {\n      logger2.warn(\"Response was error\", response.error);\n      throw new ErrorResponse(response);\n    }\n  }\n  _processSigninState(response, state) {\n    var _a;\n    const logger2 = this._logger.create(\"_processSigninState\");\n    if (state.id !== response.state) {\n      logger2.throw(new Error(\"State does not match\"));\n    }\n    if (!state.client_id) {\n      logger2.throw(new Error(\"No client_id on state\"));\n    }\n    if (!state.authority) {\n      logger2.throw(new Error(\"No authority on state\"));\n    }\n    if (this._settings.authority !== state.authority) {\n      logger2.throw(new Error(\"authority mismatch on settings vs. signin state\"));\n    }\n    if (this._settings.client_id && this._settings.client_id !== state.client_id) {\n      logger2.throw(new Error(\"client_id mismatch on settings vs. signin state\"));\n    }\n    logger2.debug(\"state validated\");\n    response.userState = state.data;\n    response.url_state = state.url_state;\n    (_a = response.scope) != null ? _a : response.scope = state.scope;\n    if (response.error) {\n      logger2.warn(\"Response was error\", response.error);\n      throw new ErrorResponse(response);\n    }\n    if (state.code_verifier && !response.code) {\n      logger2.throw(new Error(\"Expected code in response\"));\n    }\n  }\n  async _processClaims(response, skipUserInfo = false, validateSub = true) {\n    const logger2 = this._logger.create(\"_processClaims\");\n    response.profile = this._claimsService.filterProtocolClaims(response.profile);\n    if (skipUserInfo || !this._settings.loadUserInfo || !response.access_token) {\n      logger2.debug(\"not loading user info\");\n      return;\n    }\n    logger2.debug(\"loading user info\");\n    const claims = await this._userInfoService.getClaims(response.access_token);\n    logger2.debug(\"user info claims received from user info endpoint\");\n    if (validateSub && claims.sub !== response.profile.sub) {\n      logger2.throw(new Error(\"subject from UserInfo response does not match subject in ID Token\"));\n    }\n    response.profile = this._claimsService.mergeClaims(response.profile, this._claimsService.filterProtocolClaims(claims));\n    logger2.debug(\"user info claims received, updated profile:\", response.profile);\n  }\n  async _processCode(response, state, extraHeaders) {\n    const logger2 = this._logger.create(\"_processCode\");\n    if (response.code) {\n      logger2.debug(\"Validating code\");\n      const tokenResponse = await this._tokenClient.exchangeCode({\n        client_id: state.client_id,\n        client_secret: state.client_secret,\n        code: response.code,\n        redirect_uri: state.redirect_uri,\n        code_verifier: state.code_verifier,\n        extraHeaders,\n        ...state.extraTokenParams\n      });\n      Object.assign(response, tokenResponse);\n    } else {\n      logger2.debug(\"No code to process\");\n    }\n  }\n  _validateIdTokenAttributes(response, existingToken) {\n    var _a;\n    const logger2 = this._logger.create(\"_validateIdTokenAttributes\");\n    logger2.debug(\"decoding ID Token JWT\");\n    const incoming = JwtUtils.decode((_a = response.id_token) != null ? _a : \"\");\n    if (!incoming.sub) {\n      logger2.throw(new Error(\"ID Token is missing a subject claim\"));\n    }\n    if (existingToken) {\n      const existing = JwtUtils.decode(existingToken);\n      if (incoming.sub !== existing.sub) {\n        logger2.throw(new Error(\"sub in id_token does not match current sub\"));\n      }\n      if (incoming.auth_time && incoming.auth_time !== existing.auth_time) {\n        logger2.throw(new Error(\"auth_time in id_token does not match original auth_time\"));\n      }\n      if (incoming.azp && incoming.azp !== existing.azp) {\n        logger2.throw(new Error(\"azp in id_token does not match original azp\"));\n      }\n      if (!incoming.azp && existing.azp) {\n        logger2.throw(new Error(\"azp not in id_token, but present in original id_token\"));\n      }\n    }\n    response.profile = incoming;\n  }\n};\n\n// src/State.ts\nvar State = class _State {\n  constructor(args) {\n    this.id = args.id || CryptoUtils.generateUUIDv4();\n    this.data = args.data;\n    if (args.created && args.created > 0) {\n      this.created = args.created;\n    } else {\n      this.created = Timer.getEpochTime();\n    }\n    this.request_type = args.request_type;\n    this.url_state = args.url_state;\n  }\n  toStorageString() {\n    new Logger(\"State\").create(\"toStorageString\");\n    return JSON.stringify({\n      id: this.id,\n      data: this.data,\n      created: this.created,\n      request_type: this.request_type,\n      url_state: this.url_state\n    });\n  }\n  static fromStorageString(storageString) {\n    Logger.createStatic(\"State\", \"fromStorageString\");\n    return Promise.resolve(new _State(JSON.parse(storageString)));\n  }\n  static async clearStaleState(storage, age) {\n    const logger2 = Logger.createStatic(\"State\", \"clearStaleState\");\n    const cutoff = Timer.getEpochTime() - age;\n    const keys = await storage.getAllKeys();\n    logger2.debug(\"got keys\", keys);\n    for (let i = 0; i < keys.length; i++) {\n      const key = keys[i];\n      const item = await storage.get(key);\n      let remove = false;\n      if (item) {\n        try {\n          const state = await _State.fromStorageString(item);\n          logger2.debug(\"got item from key:\", key, state.created);\n          if (state.created <= cutoff) {\n            remove = true;\n          }\n        } catch (err) {\n          logger2.error(\"Error parsing state for key:\", key, err);\n          remove = true;\n        }\n      } else {\n        logger2.debug(\"no item in storage for key:\", key);\n        remove = true;\n      }\n      if (remove) {\n        logger2.debug(\"removed item for key:\", key);\n        void storage.remove(key);\n      }\n    }\n  }\n};\n\n// src/SigninState.ts\nvar SigninState = class _SigninState extends State {\n  constructor(args) {\n    super(args);\n    this.code_verifier = args.code_verifier;\n    this.code_challenge = args.code_challenge;\n    this.authority = args.authority;\n    this.client_id = args.client_id;\n    this.redirect_uri = args.redirect_uri;\n    this.scope = args.scope;\n    this.client_secret = args.client_secret;\n    this.extraTokenParams = args.extraTokenParams;\n    this.response_mode = args.response_mode;\n    this.skipUserInfo = args.skipUserInfo;\n  }\n  static async create(args) {\n    const code_verifier = args.code_verifier === true ? CryptoUtils.generateCodeVerifier() : args.code_verifier || void 0;\n    const code_challenge = code_verifier ? await CryptoUtils.generateCodeChallenge(code_verifier) : void 0;\n    return new _SigninState({\n      ...args,\n      code_verifier,\n      code_challenge\n    });\n  }\n  toStorageString() {\n    new Logger(\"SigninState\").create(\"toStorageString\");\n    return JSON.stringify({\n      id: this.id,\n      data: this.data,\n      created: this.created,\n      request_type: this.request_type,\n      url_state: this.url_state,\n      code_verifier: this.code_verifier,\n      authority: this.authority,\n      client_id: this.client_id,\n      redirect_uri: this.redirect_uri,\n      scope: this.scope,\n      client_secret: this.client_secret,\n      extraTokenParams: this.extraTokenParams,\n      response_mode: this.response_mode,\n      skipUserInfo: this.skipUserInfo\n    });\n  }\n  static fromStorageString(storageString) {\n    Logger.createStatic(\"SigninState\", \"fromStorageString\");\n    const data = JSON.parse(storageString);\n    return _SigninState.create(data);\n  }\n};\n\n// src/SigninRequest.ts\nvar _SigninRequest = class _SigninRequest {\n  constructor(args) {\n    this.url = args.url;\n    this.state = args.state;\n  }\n  static async create({\n    // mandatory\n    url,\n    authority,\n    client_id,\n    redirect_uri,\n    response_type,\n    scope,\n    // optional\n    state_data,\n    response_mode,\n    request_type,\n    client_secret,\n    nonce,\n    url_state,\n    resource,\n    skipUserInfo,\n    extraQueryParams,\n    extraTokenParams,\n    disablePKCE,\n    dpopJkt,\n    omitScopeWhenRequesting,\n    ...optionalParams\n  }) {\n    if (!url) {\n      this._logger.error(\"create: No url passed\");\n      throw new Error(\"url\");\n    }\n    if (!client_id) {\n      this._logger.error(\"create: No client_id passed\");\n      throw new Error(\"client_id\");\n    }\n    if (!redirect_uri) {\n      this._logger.error(\"create: No redirect_uri passed\");\n      throw new Error(\"redirect_uri\");\n    }\n    if (!response_type) {\n      this._logger.error(\"create: No response_type passed\");\n      throw new Error(\"response_type\");\n    }\n    if (!scope) {\n      this._logger.error(\"create: No scope passed\");\n      throw new Error(\"scope\");\n    }\n    if (!authority) {\n      this._logger.error(\"create: No authority passed\");\n      throw new Error(\"authority\");\n    }\n    const state = await SigninState.create({\n      data: state_data,\n      request_type,\n      url_state,\n      code_verifier: !disablePKCE,\n      client_id,\n      authority,\n      redirect_uri,\n      response_mode,\n      client_secret,\n      scope,\n      extraTokenParams,\n      skipUserInfo\n    });\n    const parsedUrl = new URL(url);\n    parsedUrl.searchParams.append(\"client_id\", client_id);\n    parsedUrl.searchParams.append(\"redirect_uri\", redirect_uri);\n    parsedUrl.searchParams.append(\"response_type\", response_type);\n    if (!omitScopeWhenRequesting) {\n      parsedUrl.searchParams.append(\"scope\", scope);\n    }\n    if (nonce) {\n      parsedUrl.searchParams.append(\"nonce\", nonce);\n    }\n    if (dpopJkt) {\n      parsedUrl.searchParams.append(\"dpop_jkt\", dpopJkt);\n    }\n    let stateParam = state.id;\n    if (url_state) {\n      stateParam = `${stateParam}${URL_STATE_DELIMITER}${url_state}`;\n    }\n    parsedUrl.searchParams.append(\"state\", stateParam);\n    if (state.code_challenge) {\n      parsedUrl.searchParams.append(\"code_challenge\", state.code_challenge);\n      parsedUrl.searchParams.append(\"code_challenge_method\", \"S256\");\n    }\n    if (resource) {\n      const resources = Array.isArray(resource) ? resource : [resource];\n      resources.forEach(r => parsedUrl.searchParams.append(\"resource\", r));\n    }\n    for (const [key, value] of Object.entries({\n      response_mode,\n      ...optionalParams,\n      ...extraQueryParams\n    })) {\n      if (value != null) {\n        parsedUrl.searchParams.append(key, value.toString());\n      }\n    }\n    return new _SigninRequest({\n      url: parsedUrl.href,\n      state\n    });\n  }\n};\n_SigninRequest._logger = new Logger(\"SigninRequest\");\nvar SigninRequest = _SigninRequest;\n\n// src/SigninResponse.ts\nvar OidcScope = \"openid\";\nvar SigninResponse = class {\n  constructor(params) {\n    /** @see {@link User.access_token} */\n    this.access_token = \"\";\n    /** @see {@link User.token_type} */\n    this.token_type = \"\";\n    /** @see {@link User.profile} */\n    this.profile = {};\n    this.state = params.get(\"state\");\n    this.session_state = params.get(\"session_state\");\n    if (this.state) {\n      const splitState = decodeURIComponent(this.state).split(URL_STATE_DELIMITER);\n      this.state = splitState[0];\n      if (splitState.length > 1) {\n        this.url_state = splitState.slice(1).join(URL_STATE_DELIMITER);\n      }\n    }\n    this.error = params.get(\"error\");\n    this.error_description = params.get(\"error_description\");\n    this.error_uri = params.get(\"error_uri\");\n    this.code = params.get(\"code\");\n  }\n  get expires_in() {\n    if (this.expires_at === void 0) {\n      return void 0;\n    }\n    return this.expires_at - Timer.getEpochTime();\n  }\n  set expires_in(value) {\n    if (typeof value === \"string\") value = Number(value);\n    if (value !== void 0 && value >= 0) {\n      this.expires_at = Math.floor(value) + Timer.getEpochTime();\n    }\n  }\n  get isOpenId() {\n    var _a;\n    return ((_a = this.scope) == null ? void 0 : _a.split(\" \").includes(OidcScope)) || !!this.id_token;\n  }\n};\n\n// src/SignoutRequest.ts\nvar SignoutRequest = class {\n  constructor({\n    url,\n    state_data,\n    id_token_hint,\n    post_logout_redirect_uri,\n    extraQueryParams,\n    request_type,\n    client_id\n  }) {\n    this._logger = new Logger(\"SignoutRequest\");\n    if (!url) {\n      this._logger.error(\"ctor: No url passed\");\n      throw new Error(\"url\");\n    }\n    const parsedUrl = new URL(url);\n    if (id_token_hint) {\n      parsedUrl.searchParams.append(\"id_token_hint\", id_token_hint);\n    }\n    if (client_id) {\n      parsedUrl.searchParams.append(\"client_id\", client_id);\n    }\n    if (post_logout_redirect_uri) {\n      parsedUrl.searchParams.append(\"post_logout_redirect_uri\", post_logout_redirect_uri);\n      if (state_data) {\n        this.state = new State({\n          data: state_data,\n          request_type\n        });\n        parsedUrl.searchParams.append(\"state\", this.state.id);\n      }\n    }\n    for (const [key, value] of Object.entries({\n      ...extraQueryParams\n    })) {\n      if (value != null) {\n        parsedUrl.searchParams.append(key, value.toString());\n      }\n    }\n    this.url = parsedUrl.href;\n  }\n};\n\n// src/SignoutResponse.ts\nvar SignoutResponse = class {\n  constructor(params) {\n    this.state = params.get(\"state\");\n    this.error = params.get(\"error\");\n    this.error_description = params.get(\"error_description\");\n    this.error_uri = params.get(\"error_uri\");\n  }\n};\n\n// src/ClaimsService.ts\nvar DefaultProtocolClaims = [\"nbf\", \"jti\", \"auth_time\", \"nonce\", \"acr\", \"amr\", \"azp\", \"at_hash\"\n// https://openid.net/specs/openid-connect-core-1_0.html#CodeIDToken\n];\nvar InternalRequiredProtocolClaims = [\"sub\", \"iss\", \"aud\", \"exp\", \"iat\"];\nvar ClaimsService = class {\n  constructor(_settings) {\n    this._settings = _settings;\n    this._logger = new Logger(\"ClaimsService\");\n  }\n  filterProtocolClaims(claims) {\n    const result = {\n      ...claims\n    };\n    if (this._settings.filterProtocolClaims) {\n      let protocolClaims;\n      if (Array.isArray(this._settings.filterProtocolClaims)) {\n        protocolClaims = this._settings.filterProtocolClaims;\n      } else {\n        protocolClaims = DefaultProtocolClaims;\n      }\n      for (const claim of protocolClaims) {\n        if (!InternalRequiredProtocolClaims.includes(claim)) {\n          delete result[claim];\n        }\n      }\n    }\n    return result;\n  }\n  mergeClaims(claims1, claims2) {\n    const result = {\n      ...claims1\n    };\n    for (const [claim, values] of Object.entries(claims2)) {\n      if (result[claim] !== values) {\n        if (Array.isArray(result[claim]) || Array.isArray(values)) {\n          if (this._settings.mergeClaimsStrategy.array == \"replace\") {\n            result[claim] = values;\n          } else {\n            const mergedValues = Array.isArray(result[claim]) ? result[claim] : [result[claim]];\n            for (const value of Array.isArray(values) ? values : [values]) {\n              if (!mergedValues.includes(value)) {\n                mergedValues.push(value);\n              }\n            }\n            result[claim] = mergedValues;\n          }\n        } else if (typeof result[claim] === \"object\" && typeof values === \"object\") {\n          result[claim] = this.mergeClaims(result[claim], values);\n        } else {\n          result[claim] = values;\n        }\n      }\n    }\n    return result;\n  }\n};\n\n// src/DPoPStore.ts\nvar DPoPState = class {\n  constructor(keys, nonce) {\n    this.keys = keys;\n    this.nonce = nonce;\n  }\n};\n\n// src/OidcClient.ts\nvar OidcClient = class {\n  constructor(settings, metadataService) {\n    this._logger = new Logger(\"OidcClient\");\n    this.settings = settings instanceof OidcClientSettingsStore ? settings : new OidcClientSettingsStore(settings);\n    this.metadataService = metadataService != null ? metadataService : new MetadataService(this.settings);\n    this._claimsService = new ClaimsService(this.settings);\n    this._validator = new ResponseValidator(this.settings, this.metadataService, this._claimsService);\n    this._tokenClient = new TokenClient(this.settings, this.metadataService);\n  }\n  async createSigninRequest({\n    state,\n    request,\n    request_uri,\n    request_type,\n    id_token_hint,\n    login_hint,\n    skipUserInfo,\n    nonce,\n    url_state,\n    response_type = this.settings.response_type,\n    scope = this.settings.scope,\n    redirect_uri = this.settings.redirect_uri,\n    prompt = this.settings.prompt,\n    display = this.settings.display,\n    max_age = this.settings.max_age,\n    ui_locales = this.settings.ui_locales,\n    acr_values = this.settings.acr_values,\n    resource = this.settings.resource,\n    response_mode = this.settings.response_mode,\n    extraQueryParams = this.settings.extraQueryParams,\n    extraTokenParams = this.settings.extraTokenParams,\n    dpopJkt,\n    omitScopeWhenRequesting = this.settings.omitScopeWhenRequesting\n  }) {\n    const logger2 = this._logger.create(\"createSigninRequest\");\n    if (response_type !== \"code\") {\n      throw new Error(\"Only the Authorization Code flow (with PKCE) is supported\");\n    }\n    const url = await this.metadataService.getAuthorizationEndpoint();\n    logger2.debug(\"Received authorization endpoint\", url);\n    const signinRequest = await SigninRequest.create({\n      url,\n      authority: this.settings.authority,\n      client_id: this.settings.client_id,\n      redirect_uri,\n      response_type,\n      scope,\n      state_data: state,\n      url_state,\n      prompt,\n      display,\n      max_age,\n      ui_locales,\n      id_token_hint,\n      login_hint,\n      acr_values,\n      dpopJkt,\n      resource,\n      request,\n      request_uri,\n      extraQueryParams,\n      extraTokenParams,\n      request_type,\n      response_mode,\n      client_secret: this.settings.client_secret,\n      skipUserInfo,\n      nonce,\n      disablePKCE: this.settings.disablePKCE,\n      omitScopeWhenRequesting\n    });\n    await this.clearStaleState();\n    const signinState = signinRequest.state;\n    await this.settings.stateStore.set(signinState.id, signinState.toStorageString());\n    return signinRequest;\n  }\n  async readSigninResponseState(url, removeState = false) {\n    const logger2 = this._logger.create(\"readSigninResponseState\");\n    const response = new SigninResponse(UrlUtils.readParams(url, this.settings.response_mode));\n    if (!response.state) {\n      logger2.throw(new Error(\"No state in response\"));\n      throw null;\n    }\n    const storedStateString = await this.settings.stateStore[removeState ? \"remove\" : \"get\"](response.state);\n    if (!storedStateString) {\n      logger2.throw(new Error(\"No matching state found in storage\"));\n      throw null;\n    }\n    const state = await SigninState.fromStorageString(storedStateString);\n    return {\n      state,\n      response\n    };\n  }\n  async processSigninResponse(url, extraHeaders) {\n    const logger2 = this._logger.create(\"processSigninResponse\");\n    const {\n      state,\n      response\n    } = await this.readSigninResponseState(url, true);\n    logger2.debug(\"received state from storage; validating response\");\n    if (this.settings.dpop && this.settings.dpop.store) {\n      const dpopProof = await this.getDpopProof(this.settings.dpop.store);\n      extraHeaders = {\n        ...extraHeaders,\n        \"DPoP\": dpopProof\n      };\n    }\n    try {\n      await this._validator.validateSigninResponse(response, state, extraHeaders);\n    } catch (err) {\n      if (err instanceof ErrorDPoPNonce && this.settings.dpop) {\n        const dpopProof = await this.getDpopProof(this.settings.dpop.store, err.nonce);\n        extraHeaders[\"DPoP\"] = dpopProof;\n        await this._validator.validateSigninResponse(response, state, extraHeaders);\n      } else {\n        throw err;\n      }\n    }\n    return response;\n  }\n  async getDpopProof(dpopStore, nonce) {\n    let keyPair;\n    let dpopState;\n    if (!(await dpopStore.getAllKeys()).includes(this.settings.client_id)) {\n      keyPair = await CryptoUtils.generateDPoPKeys();\n      dpopState = new DPoPState(keyPair, nonce);\n      await dpopStore.set(this.settings.client_id, dpopState);\n    } else {\n      dpopState = await dpopStore.get(this.settings.client_id);\n      if (dpopState.nonce !== nonce && nonce) {\n        dpopState.nonce = nonce;\n        await dpopStore.set(this.settings.client_id, dpopState);\n      }\n    }\n    return await CryptoUtils.generateDPoPProof({\n      url: await this.metadataService.getTokenEndpoint(false),\n      httpMethod: \"POST\",\n      keyPair: dpopState.keys,\n      nonce: dpopState.nonce\n    });\n  }\n  async processResourceOwnerPasswordCredentials({\n    username,\n    password,\n    skipUserInfo = false,\n    extraTokenParams = {}\n  }) {\n    const tokenResponse = await this._tokenClient.exchangeCredentials({\n      username,\n      password,\n      ...extraTokenParams\n    });\n    const signinResponse = new SigninResponse(new URLSearchParams());\n    Object.assign(signinResponse, tokenResponse);\n    await this._validator.validateCredentialsResponse(signinResponse, skipUserInfo);\n    return signinResponse;\n  }\n  async useRefreshToken({\n    state,\n    redirect_uri,\n    resource,\n    timeoutInSeconds,\n    extraHeaders,\n    extraTokenParams\n  }) {\n    var _a;\n    const logger2 = this._logger.create(\"useRefreshToken\");\n    let scope;\n    if (this.settings.refreshTokenAllowedScope === void 0) {\n      scope = state.scope;\n    } else {\n      const allowableScopes = this.settings.refreshTokenAllowedScope.split(\" \");\n      const providedScopes = ((_a = state.scope) == null ? void 0 : _a.split(\" \")) || [];\n      scope = providedScopes.filter(s => allowableScopes.includes(s)).join(\" \");\n    }\n    if (this.settings.dpop && this.settings.dpop.store) {\n      const dpopProof = await this.getDpopProof(this.settings.dpop.store);\n      extraHeaders = {\n        ...extraHeaders,\n        \"DPoP\": dpopProof\n      };\n    }\n    let result;\n    try {\n      result = await this._tokenClient.exchangeRefreshToken({\n        refresh_token: state.refresh_token,\n        // provide the (possible filtered) scope list\n        scope,\n        redirect_uri,\n        resource,\n        timeoutInSeconds,\n        extraHeaders,\n        ...extraTokenParams\n      });\n    } catch (err) {\n      if (err instanceof ErrorDPoPNonce && this.settings.dpop) {\n        extraHeaders[\"DPoP\"] = await this.getDpopProof(this.settings.dpop.store, err.nonce);\n        result = await this._tokenClient.exchangeRefreshToken({\n          refresh_token: state.refresh_token,\n          // provide the (possible filtered) scope list\n          scope,\n          redirect_uri,\n          resource,\n          timeoutInSeconds,\n          extraHeaders,\n          ...extraTokenParams\n        });\n      } else {\n        throw err;\n      }\n    }\n    const response = new SigninResponse(new URLSearchParams());\n    Object.assign(response, result);\n    logger2.debug(\"validating response\", response);\n    await this._validator.validateRefreshResponse(response, {\n      ...state,\n      // override the scope in the state handed over to the validator\n      // so it can set the granted scope to the requested scope in case none is included in the response\n      scope\n    });\n    return response;\n  }\n  async createSignoutRequest({\n    state,\n    id_token_hint,\n    client_id,\n    request_type,\n    post_logout_redirect_uri = this.settings.post_logout_redirect_uri,\n    extraQueryParams = this.settings.extraQueryParams\n  } = {}) {\n    const logger2 = this._logger.create(\"createSignoutRequest\");\n    const url = await this.metadataService.getEndSessionEndpoint();\n    if (!url) {\n      logger2.throw(new Error(\"No end session endpoint\"));\n      throw null;\n    }\n    logger2.debug(\"Received end session endpoint\", url);\n    if (!client_id && post_logout_redirect_uri && !id_token_hint) {\n      client_id = this.settings.client_id;\n    }\n    const request = new SignoutRequest({\n      url,\n      id_token_hint,\n      client_id,\n      post_logout_redirect_uri,\n      state_data: state,\n      extraQueryParams,\n      request_type\n    });\n    await this.clearStaleState();\n    const signoutState = request.state;\n    if (signoutState) {\n      logger2.debug(\"Signout request has state to persist\");\n      await this.settings.stateStore.set(signoutState.id, signoutState.toStorageString());\n    }\n    return request;\n  }\n  async readSignoutResponseState(url, removeState = false) {\n    const logger2 = this._logger.create(\"readSignoutResponseState\");\n    const response = new SignoutResponse(UrlUtils.readParams(url, this.settings.response_mode));\n    if (!response.state) {\n      logger2.debug(\"No state in response\");\n      if (response.error) {\n        logger2.warn(\"Response was error:\", response.error);\n        throw new ErrorResponse(response);\n      }\n      return {\n        state: void 0,\n        response\n      };\n    }\n    const storedStateString = await this.settings.stateStore[removeState ? \"remove\" : \"get\"](response.state);\n    if (!storedStateString) {\n      logger2.throw(new Error(\"No matching state found in storage\"));\n      throw null;\n    }\n    const state = await State.fromStorageString(storedStateString);\n    return {\n      state,\n      response\n    };\n  }\n  async processSignoutResponse(url) {\n    const logger2 = this._logger.create(\"processSignoutResponse\");\n    const {\n      state,\n      response\n    } = await this.readSignoutResponseState(url, true);\n    if (state) {\n      logger2.debug(\"Received state from storage; validating response\");\n      this._validator.validateSignoutResponse(response, state);\n    } else {\n      logger2.debug(\"No state from storage; skipping response validation\");\n    }\n    return response;\n  }\n  clearStaleState() {\n    this._logger.create(\"clearStaleState\");\n    return State.clearStaleState(this.settings.stateStore, this.settings.staleStateAgeInSeconds);\n  }\n  async revokeToken(token, type) {\n    this._logger.create(\"revokeToken\");\n    return await this._tokenClient.revoke({\n      token,\n      token_type_hint: type\n    });\n  }\n};\n\n// src/SessionMonitor.ts\nvar SessionMonitor = class {\n  constructor(_userManager) {\n    this._userManager = _userManager;\n    this._logger = new Logger(\"SessionMonitor\");\n    this._start = async user => {\n      const session_state = user.session_state;\n      if (!session_state) {\n        return;\n      }\n      const logger2 = this._logger.create(\"_start\");\n      if (user.profile) {\n        this._sub = user.profile.sub;\n        logger2.debug(\"session_state\", session_state, \", sub\", this._sub);\n      } else {\n        this._sub = void 0;\n        logger2.debug(\"session_state\", session_state, \", anonymous user\");\n      }\n      if (this._checkSessionIFrame) {\n        this._checkSessionIFrame.start(session_state);\n        return;\n      }\n      try {\n        const url = await this._userManager.metadataService.getCheckSessionIframe();\n        if (url) {\n          logger2.debug(\"initializing check session iframe\");\n          const client_id = this._userManager.settings.client_id;\n          const intervalInSeconds = this._userManager.settings.checkSessionIntervalInSeconds;\n          const stopOnError = this._userManager.settings.stopCheckSessionOnError;\n          const checkSessionIFrame = new CheckSessionIFrame(this._callback, client_id, url, intervalInSeconds, stopOnError);\n          await checkSessionIFrame.load();\n          this._checkSessionIFrame = checkSessionIFrame;\n          checkSessionIFrame.start(session_state);\n        } else {\n          logger2.warn(\"no check session iframe found in the metadata\");\n        }\n      } catch (err) {\n        logger2.error(\"Error from getCheckSessionIframe:\", err instanceof Error ? err.message : err);\n      }\n    };\n    this._stop = () => {\n      const logger2 = this._logger.create(\"_stop\");\n      this._sub = void 0;\n      if (this._checkSessionIFrame) {\n        this._checkSessionIFrame.stop();\n      }\n      if (this._userManager.settings.monitorAnonymousSession) {\n        const timerHandle = setInterval(async () => {\n          clearInterval(timerHandle);\n          try {\n            const session = await this._userManager.querySessionStatus();\n            if (session) {\n              const tmpUser = {\n                session_state: session.session_state,\n                profile: session.sub ? {\n                  sub: session.sub\n                } : null\n              };\n              void this._start(tmpUser);\n            }\n          } catch (err) {\n            logger2.error(\"error from querySessionStatus\", err instanceof Error ? err.message : err);\n          }\n        }, 1e3);\n      }\n    };\n    this._callback = async () => {\n      const logger2 = this._logger.create(\"_callback\");\n      try {\n        const session = await this._userManager.querySessionStatus();\n        let raiseEvent = true;\n        if (session && this._checkSessionIFrame) {\n          if (session.sub === this._sub) {\n            raiseEvent = false;\n            this._checkSessionIFrame.start(session.session_state);\n            logger2.debug(\"same sub still logged in at OP, session state has changed, restarting check session iframe; session_state\", session.session_state);\n            await this._userManager.events._raiseUserSessionChanged();\n          } else {\n            logger2.debug(\"different subject signed into OP\", session.sub);\n          }\n        } else {\n          logger2.debug(\"subject no longer signed into OP\");\n        }\n        if (raiseEvent) {\n          if (this._sub) {\n            await this._userManager.events._raiseUserSignedOut();\n          } else {\n            await this._userManager.events._raiseUserSignedIn();\n          }\n        } else {\n          logger2.debug(\"no change in session detected, no event to raise\");\n        }\n      } catch (err) {\n        if (this._sub) {\n          logger2.debug(\"Error calling queryCurrentSigninSession; raising signed out event\", err);\n          await this._userManager.events._raiseUserSignedOut();\n        }\n      }\n    };\n    if (!_userManager) {\n      this._logger.throw(new Error(\"No user manager passed\"));\n    }\n    this._userManager.events.addUserLoaded(this._start);\n    this._userManager.events.addUserUnloaded(this._stop);\n    this._init().catch(err => {\n      this._logger.error(err);\n    });\n  }\n  async _init() {\n    this._logger.create(\"_init\");\n    const user = await this._userManager.getUser();\n    if (user) {\n      void this._start(user);\n    } else if (this._userManager.settings.monitorAnonymousSession) {\n      const session = await this._userManager.querySessionStatus();\n      if (session) {\n        const tmpUser = {\n          session_state: session.session_state,\n          profile: session.sub ? {\n            sub: session.sub\n          } : null\n        };\n        void this._start(tmpUser);\n      }\n    }\n  }\n};\n\n// src/User.ts\nvar User = class _User {\n  constructor(args) {\n    var _a;\n    this.id_token = args.id_token;\n    this.session_state = (_a = args.session_state) != null ? _a : null;\n    this.access_token = args.access_token;\n    this.refresh_token = args.refresh_token;\n    this.token_type = args.token_type;\n    this.scope = args.scope;\n    this.profile = args.profile;\n    this.expires_at = args.expires_at;\n    this.state = args.userState;\n    this.url_state = args.url_state;\n  }\n  /** Computed number of seconds the access token has remaining. */\n  get expires_in() {\n    if (this.expires_at === void 0) {\n      return void 0;\n    }\n    return this.expires_at - Timer.getEpochTime();\n  }\n  set expires_in(value) {\n    if (value !== void 0) {\n      this.expires_at = Math.floor(value) + Timer.getEpochTime();\n    }\n  }\n  /** Computed value indicating if the access token is expired. */\n  get expired() {\n    const expires_in = this.expires_in;\n    if (expires_in === void 0) {\n      return void 0;\n    }\n    return expires_in <= 0;\n  }\n  /** Array representing the parsed values from the `scope`. */\n  get scopes() {\n    var _a, _b;\n    return (_b = (_a = this.scope) == null ? void 0 : _a.split(\" \")) != null ? _b : [];\n  }\n  toStorageString() {\n    new Logger(\"User\").create(\"toStorageString\");\n    return JSON.stringify({\n      id_token: this.id_token,\n      session_state: this.session_state,\n      access_token: this.access_token,\n      refresh_token: this.refresh_token,\n      token_type: this.token_type,\n      scope: this.scope,\n      profile: this.profile,\n      expires_at: this.expires_at\n    });\n  }\n  static fromStorageString(storageString) {\n    Logger.createStatic(\"User\", \"fromStorageString\");\n    return new _User(JSON.parse(storageString));\n  }\n};\n\n// src/navigators/AbstractChildWindow.ts\nvar messageSource = \"oidc-client\";\nvar AbstractChildWindow = class {\n  constructor() {\n    this._abort = new Event(\"Window navigation aborted\");\n    this._disposeHandlers = /* @__PURE__ */new Set();\n    this._window = null;\n  }\n  async navigate(params) {\n    const logger2 = this._logger.create(\"navigate\");\n    if (!this._window) {\n      throw new Error(\"Attempted to navigate on a disposed window\");\n    }\n    logger2.debug(\"setting URL in window\");\n    this._window.location.replace(params.url);\n    const {\n      url,\n      keepOpen\n    } = await new Promise((resolve, reject) => {\n      const listener = e => {\n        var _a;\n        const data = e.data;\n        const origin = (_a = params.scriptOrigin) != null ? _a : window.location.origin;\n        if (e.origin !== origin || (data == null ? void 0 : data.source) !== messageSource) {\n          return;\n        }\n        try {\n          const state = UrlUtils.readParams(data.url, params.response_mode).get(\"state\");\n          if (!state) {\n            logger2.warn(\"no state found in response url\");\n          }\n          if (e.source !== this._window && state !== params.state) {\n            return;\n          }\n        } catch (err) {\n          this._dispose();\n          reject(new Error(\"Invalid response from window\"));\n        }\n        resolve(data);\n      };\n      window.addEventListener(\"message\", listener, false);\n      this._disposeHandlers.add(() => window.removeEventListener(\"message\", listener, false));\n      this._disposeHandlers.add(this._abort.addHandler(reason => {\n        this._dispose();\n        reject(reason);\n      }));\n    });\n    logger2.debug(\"got response from window\");\n    this._dispose();\n    if (!keepOpen) {\n      this.close();\n    }\n    return {\n      url\n    };\n  }\n  _dispose() {\n    this._logger.create(\"_dispose\");\n    for (const dispose of this._disposeHandlers) {\n      dispose();\n    }\n    this._disposeHandlers.clear();\n  }\n  static _notifyParent(parent, url, keepOpen = false, targetOrigin = window.location.origin) {\n    parent.postMessage({\n      source: messageSource,\n      url,\n      keepOpen\n    }, targetOrigin);\n  }\n};\n\n// src/UserManagerSettings.ts\nvar DefaultPopupWindowFeatures = {\n  location: false,\n  toolbar: false,\n  height: 640,\n  closePopupWindowAfterInSeconds: -1\n};\nvar DefaultPopupTarget = \"_blank\";\nvar DefaultAccessTokenExpiringNotificationTimeInSeconds = 60;\nvar DefaultCheckSessionIntervalInSeconds = 2;\nvar DefaultSilentRequestTimeoutInSeconds = 10;\nvar UserManagerSettingsStore = class extends OidcClientSettingsStore {\n  constructor(args) {\n    const {\n      popup_redirect_uri = args.redirect_uri,\n      popup_post_logout_redirect_uri = args.post_logout_redirect_uri,\n      popupWindowFeatures = DefaultPopupWindowFeatures,\n      popupWindowTarget = DefaultPopupTarget,\n      redirectMethod = \"assign\",\n      redirectTarget = \"self\",\n      iframeNotifyParentOrigin = args.iframeNotifyParentOrigin,\n      iframeScriptOrigin = args.iframeScriptOrigin,\n      requestTimeoutInSeconds,\n      silent_redirect_uri = args.redirect_uri,\n      silentRequestTimeoutInSeconds,\n      automaticSilentRenew = true,\n      validateSubOnSilentRenew = true,\n      includeIdTokenInSilentRenew = false,\n      monitorSession = false,\n      monitorAnonymousSession = false,\n      checkSessionIntervalInSeconds = DefaultCheckSessionIntervalInSeconds,\n      query_status_response_type = \"code\",\n      stopCheckSessionOnError = true,\n      revokeTokenTypes = [\"access_token\", \"refresh_token\"],\n      revokeTokensOnSignout = false,\n      includeIdTokenInSilentSignout = false,\n      accessTokenExpiringNotificationTimeInSeconds = DefaultAccessTokenExpiringNotificationTimeInSeconds,\n      userStore\n    } = args;\n    super(args);\n    this.popup_redirect_uri = popup_redirect_uri;\n    this.popup_post_logout_redirect_uri = popup_post_logout_redirect_uri;\n    this.popupWindowFeatures = popupWindowFeatures;\n    this.popupWindowTarget = popupWindowTarget;\n    this.redirectMethod = redirectMethod;\n    this.redirectTarget = redirectTarget;\n    this.iframeNotifyParentOrigin = iframeNotifyParentOrigin;\n    this.iframeScriptOrigin = iframeScriptOrigin;\n    this.silent_redirect_uri = silent_redirect_uri;\n    this.silentRequestTimeoutInSeconds = silentRequestTimeoutInSeconds || requestTimeoutInSeconds || DefaultSilentRequestTimeoutInSeconds;\n    this.automaticSilentRenew = automaticSilentRenew;\n    this.validateSubOnSilentRenew = validateSubOnSilentRenew;\n    this.includeIdTokenInSilentRenew = includeIdTokenInSilentRenew;\n    this.monitorSession = monitorSession;\n    this.monitorAnonymousSession = monitorAnonymousSession;\n    this.checkSessionIntervalInSeconds = checkSessionIntervalInSeconds;\n    this.stopCheckSessionOnError = stopCheckSessionOnError;\n    this.query_status_response_type = query_status_response_type;\n    this.revokeTokenTypes = revokeTokenTypes;\n    this.revokeTokensOnSignout = revokeTokensOnSignout;\n    this.includeIdTokenInSilentSignout = includeIdTokenInSilentSignout;\n    this.accessTokenExpiringNotificationTimeInSeconds = accessTokenExpiringNotificationTimeInSeconds;\n    if (userStore) {\n      this.userStore = userStore;\n    } else {\n      const store = typeof window !== \"undefined\" ? window.sessionStorage : new InMemoryWebStorage();\n      this.userStore = new WebStorageStateStore({\n        store\n      });\n    }\n  }\n};\n\n// src/navigators/IFrameWindow.ts\nvar IFrameWindow = class _IFrameWindow extends AbstractChildWindow {\n  constructor({\n    silentRequestTimeoutInSeconds = DefaultSilentRequestTimeoutInSeconds\n  }) {\n    super();\n    this._logger = new Logger(\"IFrameWindow\");\n    this._timeoutInSeconds = silentRequestTimeoutInSeconds;\n    this._frame = _IFrameWindow.createHiddenIframe();\n    this._window = this._frame.contentWindow;\n  }\n  static createHiddenIframe() {\n    const iframe = window.document.createElement(\"iframe\");\n    iframe.style.visibility = \"hidden\";\n    iframe.style.position = \"fixed\";\n    iframe.style.left = \"-1000px\";\n    iframe.style.top = \"0\";\n    iframe.width = \"0\";\n    iframe.height = \"0\";\n    window.document.body.appendChild(iframe);\n    return iframe;\n  }\n  async navigate(params) {\n    this._logger.debug(\"navigate: Using timeout of:\", this._timeoutInSeconds);\n    const timer = setTimeout(() => void this._abort.raise(new ErrorTimeout(\"IFrame timed out without a response\")), this._timeoutInSeconds * 1e3);\n    this._disposeHandlers.add(() => clearTimeout(timer));\n    return await super.navigate(params);\n  }\n  close() {\n    var _a;\n    if (this._frame) {\n      if (this._frame.parentNode) {\n        this._frame.addEventListener(\"load\", ev => {\n          var _a2;\n          const frame = ev.target;\n          (_a2 = frame.parentNode) == null ? void 0 : _a2.removeChild(frame);\n          void this._abort.raise(new Error(\"IFrame removed from DOM\"));\n        }, true);\n        (_a = this._frame.contentWindow) == null ? void 0 : _a.location.replace(\"about:blank\");\n      }\n      this._frame = null;\n    }\n    this._window = null;\n  }\n  static notifyParent(url, targetOrigin) {\n    return super._notifyParent(window.parent, url, false, targetOrigin);\n  }\n};\n\n// src/navigators/IFrameNavigator.ts\nvar IFrameNavigator = class {\n  constructor(_settings) {\n    this._settings = _settings;\n    this._logger = new Logger(\"IFrameNavigator\");\n  }\n  async prepare({\n    silentRequestTimeoutInSeconds = this._settings.silentRequestTimeoutInSeconds\n  }) {\n    return new IFrameWindow({\n      silentRequestTimeoutInSeconds\n    });\n  }\n  async callback(url) {\n    this._logger.create(\"callback\");\n    IFrameWindow.notifyParent(url, this._settings.iframeNotifyParentOrigin);\n  }\n};\n\n// src/navigators/PopupWindow.ts\nvar checkForPopupClosedInterval = 500;\nvar second = 1e3;\nvar PopupWindow = class extends AbstractChildWindow {\n  constructor({\n    popupWindowTarget = DefaultPopupTarget,\n    popupWindowFeatures = {},\n    popupSignal\n  }) {\n    super();\n    this._logger = new Logger(\"PopupWindow\");\n    const centeredPopup = PopupUtils.center({\n      ...DefaultPopupWindowFeatures,\n      ...popupWindowFeatures\n    });\n    this._window = window.open(void 0, popupWindowTarget, PopupUtils.serialize(centeredPopup));\n    if (popupSignal) {\n      popupSignal.addEventListener(\"abort\", () => {\n        var _a;\n        void this._abort.raise(new Error((_a = popupSignal.reason) != null ? _a : \"Popup aborted\"));\n      });\n    }\n    if (popupWindowFeatures.closePopupWindowAfterInSeconds && popupWindowFeatures.closePopupWindowAfterInSeconds > 0) {\n      setTimeout(() => {\n        if (!this._window || typeof this._window.closed !== \"boolean\" || this._window.closed) {\n          void this._abort.raise(new Error(\"Popup blocked by user\"));\n          return;\n        }\n        this.close();\n      }, popupWindowFeatures.closePopupWindowAfterInSeconds * second);\n    }\n  }\n  async navigate(params) {\n    var _a;\n    (_a = this._window) == null ? void 0 : _a.focus();\n    const popupClosedInterval = setInterval(() => {\n      if (!this._window || this._window.closed) {\n        void this._abort.raise(new Error(\"Popup closed by user\"));\n      }\n    }, checkForPopupClosedInterval);\n    this._disposeHandlers.add(() => clearInterval(popupClosedInterval));\n    return await super.navigate(params);\n  }\n  close() {\n    if (this._window) {\n      if (!this._window.closed) {\n        this._window.close();\n        void this._abort.raise(new Error(\"Popup closed\"));\n      }\n    }\n    this._window = null;\n  }\n  static notifyOpener(url, keepOpen) {\n    if (!window.opener) {\n      throw new Error(\"No window.opener. Can't complete notification.\");\n    }\n    return super._notifyParent(window.opener, url, keepOpen);\n  }\n};\n\n// src/navigators/PopupNavigator.ts\nvar PopupNavigator = class {\n  constructor(_settings) {\n    this._settings = _settings;\n    this._logger = new Logger(\"PopupNavigator\");\n  }\n  async prepare({\n    popupWindowFeatures = this._settings.popupWindowFeatures,\n    popupWindowTarget = this._settings.popupWindowTarget,\n    popupSignal\n  }) {\n    return new PopupWindow({\n      popupWindowFeatures,\n      popupWindowTarget,\n      popupSignal\n    });\n  }\n  async callback(url, {\n    keepOpen = false\n  }) {\n    this._logger.create(\"callback\");\n    PopupWindow.notifyOpener(url, keepOpen);\n  }\n};\n\n// src/navigators/RedirectNavigator.ts\nvar RedirectNavigator = class {\n  constructor(_settings) {\n    this._settings = _settings;\n    this._logger = new Logger(\"RedirectNavigator\");\n  }\n  async prepare({\n    redirectMethod = this._settings.redirectMethod,\n    redirectTarget = this._settings.redirectTarget\n  }) {\n    var _a;\n    this._logger.create(\"prepare\");\n    let targetWindow = window.self;\n    if (redirectTarget === \"top\") {\n      targetWindow = (_a = window.top) != null ? _a : window.self;\n    }\n    const redirect = targetWindow.location[redirectMethod].bind(targetWindow.location);\n    let abort;\n    return {\n      navigate: async params => {\n        this._logger.create(\"navigate\");\n        const promise = new Promise((resolve, reject) => {\n          abort = reject;\n        });\n        redirect(params.url);\n        return await promise;\n      },\n      close: () => {\n        this._logger.create(\"close\");\n        abort == null ? void 0 : abort(new Error(\"Redirect aborted\"));\n        targetWindow.stop();\n      }\n    };\n  }\n  async callback() {\n    return;\n  }\n};\n\n// src/UserManagerEvents.ts\nvar UserManagerEvents = class extends AccessTokenEvents {\n  constructor(settings) {\n    super({\n      expiringNotificationTimeInSeconds: settings.accessTokenExpiringNotificationTimeInSeconds\n    });\n    this._logger = new Logger(\"UserManagerEvents\");\n    this._userLoaded = new Event(\"User loaded\");\n    this._userUnloaded = new Event(\"User unloaded\");\n    this._silentRenewError = new Event(\"Silent renew error\");\n    this._userSignedIn = new Event(\"User signed in\");\n    this._userSignedOut = new Event(\"User signed out\");\n    this._userSessionChanged = new Event(\"User session changed\");\n  }\n  async load(user, raiseEvent = true) {\n    super.load(user);\n    if (raiseEvent) {\n      await this._userLoaded.raise(user);\n    }\n  }\n  async unload() {\n    super.unload();\n    await this._userUnloaded.raise();\n  }\n  /**\n   * Add callback: Raised when a user session has been established (or re-established).\n   */\n  addUserLoaded(cb) {\n    return this._userLoaded.addHandler(cb);\n  }\n  /**\n   * Remove callback: Raised when a user session has been established (or re-established).\n   */\n  removeUserLoaded(cb) {\n    return this._userLoaded.removeHandler(cb);\n  }\n  /**\n   * Add callback: Raised when a user session has been terminated.\n   */\n  addUserUnloaded(cb) {\n    return this._userUnloaded.addHandler(cb);\n  }\n  /**\n   * Remove callback: Raised when a user session has been terminated.\n   */\n  removeUserUnloaded(cb) {\n    return this._userUnloaded.removeHandler(cb);\n  }\n  /**\n   * Add callback: Raised when the automatic silent renew has failed.\n   */\n  addSilentRenewError(cb) {\n    return this._silentRenewError.addHandler(cb);\n  }\n  /**\n   * Remove callback: Raised when the automatic silent renew has failed.\n   */\n  removeSilentRenewError(cb) {\n    return this._silentRenewError.removeHandler(cb);\n  }\n  /**\n   * @internal\n   */\n  async _raiseSilentRenewError(e) {\n    await this._silentRenewError.raise(e);\n  }\n  /**\n   * Add callback: Raised when the user is signed in (when `monitorSession` is set).\n   * @see {@link UserManagerSettings.monitorSession}\n   */\n  addUserSignedIn(cb) {\n    return this._userSignedIn.addHandler(cb);\n  }\n  /**\n   * Remove callback: Raised when the user is signed in (when `monitorSession` is set).\n   */\n  removeUserSignedIn(cb) {\n    this._userSignedIn.removeHandler(cb);\n  }\n  /**\n   * @internal\n   */\n  async _raiseUserSignedIn() {\n    await this._userSignedIn.raise();\n  }\n  /**\n   * Add callback: Raised when the user's sign-in status at the OP has changed (when `monitorSession` is set).\n   * @see {@link UserManagerSettings.monitorSession}\n   */\n  addUserSignedOut(cb) {\n    return this._userSignedOut.addHandler(cb);\n  }\n  /**\n   * Remove callback: Raised when the user's sign-in status at the OP has changed (when `monitorSession` is set).\n   */\n  removeUserSignedOut(cb) {\n    this._userSignedOut.removeHandler(cb);\n  }\n  /**\n   * @internal\n   */\n  async _raiseUserSignedOut() {\n    await this._userSignedOut.raise();\n  }\n  /**\n   * Add callback: Raised when the user session changed (when `monitorSession` is set).\n   * @see {@link UserManagerSettings.monitorSession}\n   */\n  addUserSessionChanged(cb) {\n    return this._userSessionChanged.addHandler(cb);\n  }\n  /**\n   * Remove callback: Raised when the user session changed (when `monitorSession` is set).\n   */\n  removeUserSessionChanged(cb) {\n    this._userSessionChanged.removeHandler(cb);\n  }\n  /**\n   * @internal\n   */\n  async _raiseUserSessionChanged() {\n    await this._userSessionChanged.raise();\n  }\n};\n\n// src/SilentRenewService.ts\nvar SilentRenewService = class {\n  constructor(_userManager) {\n    this._userManager = _userManager;\n    this._logger = new Logger(\"SilentRenewService\");\n    this._isStarted = false;\n    this._retryTimer = new Timer(\"Retry Silent Renew\");\n    this._tokenExpiring = async () => {\n      const logger2 = this._logger.create(\"_tokenExpiring\");\n      try {\n        await this._userManager.signinSilent();\n        logger2.debug(\"silent token renewal successful\");\n      } catch (err) {\n        if (err instanceof ErrorTimeout) {\n          logger2.warn(\"ErrorTimeout from signinSilent:\", err, \"retry in 5s\");\n          this._retryTimer.init(5);\n          return;\n        }\n        logger2.error(\"Error from signinSilent:\", err);\n        await this._userManager.events._raiseSilentRenewError(err);\n      }\n    };\n  }\n  async start() {\n    const logger2 = this._logger.create(\"start\");\n    if (!this._isStarted) {\n      this._isStarted = true;\n      this._userManager.events.addAccessTokenExpiring(this._tokenExpiring);\n      this._retryTimer.addHandler(this._tokenExpiring);\n      try {\n        await this._userManager.getUser();\n      } catch (err) {\n        logger2.error(\"getUser error\", err);\n      }\n    }\n  }\n  stop() {\n    if (this._isStarted) {\n      this._retryTimer.cancel();\n      this._retryTimer.removeHandler(this._tokenExpiring);\n      this._userManager.events.removeAccessTokenExpiring(this._tokenExpiring);\n      this._isStarted = false;\n    }\n  }\n};\n\n// src/RefreshState.ts\nvar RefreshState = class {\n  constructor(args) {\n    this.refresh_token = args.refresh_token;\n    this.id_token = args.id_token;\n    this.session_state = args.session_state;\n    this.scope = args.scope;\n    this.profile = args.profile;\n    this.data = args.state;\n  }\n};\n\n// src/UserManager.ts\nvar UserManager = class {\n  constructor(settings, redirectNavigator, popupNavigator, iframeNavigator) {\n    this._logger = new Logger(\"UserManager\");\n    this.settings = new UserManagerSettingsStore(settings);\n    this._client = new OidcClient(settings);\n    this._redirectNavigator = redirectNavigator != null ? redirectNavigator : new RedirectNavigator(this.settings);\n    this._popupNavigator = popupNavigator != null ? popupNavigator : new PopupNavigator(this.settings);\n    this._iframeNavigator = iframeNavigator != null ? iframeNavigator : new IFrameNavigator(this.settings);\n    this._events = new UserManagerEvents(this.settings);\n    this._silentRenewService = new SilentRenewService(this);\n    if (this.settings.automaticSilentRenew) {\n      this.startSilentRenew();\n    }\n    this._sessionMonitor = null;\n    if (this.settings.monitorSession) {\n      this._sessionMonitor = new SessionMonitor(this);\n    }\n  }\n  /**\n   * Get object used to register for events raised by the `UserManager`.\n   */\n  get events() {\n    return this._events;\n  }\n  /**\n   * Get object used to access the metadata configuration of the identity provider.\n   */\n  get metadataService() {\n    return this._client.metadataService;\n  }\n  /**\n   * Load the `User` object for the currently authenticated user.\n   *\n   * @returns A promise\n   */\n  async getUser() {\n    const logger2 = this._logger.create(\"getUser\");\n    const user = await this._loadUser();\n    if (user) {\n      logger2.info(\"user loaded\");\n      await this._events.load(user, false);\n      return user;\n    }\n    logger2.info(\"user not found in storage\");\n    return null;\n  }\n  /**\n   * Remove from any storage the currently authenticated user.\n   *\n   * @returns A promise\n   */\n  async removeUser() {\n    const logger2 = this._logger.create(\"removeUser\");\n    await this.storeUser(null);\n    logger2.info(\"user removed from storage\");\n    await this._events.unload();\n  }\n  /**\n   * Trigger a redirect of the current window to the authorization endpoint.\n   *\n   * @returns A promise\n   *\n   * @throws `Error` In cases of wrong authentication.\n   */\n  async signinRedirect(args = {}) {\n    var _a;\n    this._logger.create(\"signinRedirect\");\n    const {\n      redirectMethod,\n      ...requestArgs\n    } = args;\n    let dpopJkt;\n    if ((_a = this.settings.dpop) == null ? void 0 : _a.bind_authorization_code) {\n      dpopJkt = await this.generateDPoPJkt(this.settings.dpop);\n    }\n    const handle = await this._redirectNavigator.prepare({\n      redirectMethod\n    });\n    await this._signinStart({\n      request_type: \"si:r\",\n      dpopJkt,\n      ...requestArgs\n    }, handle);\n  }\n  /**\n   * Process the response (callback) from the authorization endpoint.\n   * It is recommended to use {@link UserManager.signinCallback} instead.\n   *\n   * @returns A promise containing the authenticated `User`.\n   *\n   * @see {@link UserManager.signinCallback}\n   */\n  async signinRedirectCallback(url = window.location.href) {\n    const logger2 = this._logger.create(\"signinRedirectCallback\");\n    const user = await this._signinEnd(url);\n    if (user.profile && user.profile.sub) {\n      logger2.info(\"success, signed in subject\", user.profile.sub);\n    } else {\n      logger2.info(\"no subject\");\n    }\n    return user;\n  }\n  /**\n   * Trigger the signin with user/password.\n   *\n   * @returns A promise containing the authenticated `User`.\n   * @throws {@link ErrorResponse} In cases of wrong authentication.\n   */\n  async signinResourceOwnerCredentials({\n    username,\n    password,\n    skipUserInfo = false\n  }) {\n    const logger2 = this._logger.create(\"signinResourceOwnerCredential\");\n    const signinResponse = await this._client.processResourceOwnerPasswordCredentials({\n      username,\n      password,\n      skipUserInfo,\n      extraTokenParams: this.settings.extraTokenParams\n    });\n    logger2.debug(\"got signin response\");\n    const user = await this._buildUser(signinResponse);\n    if (user.profile && user.profile.sub) {\n      logger2.info(\"success, signed in subject\", user.profile.sub);\n    } else {\n      logger2.info(\"no subject\");\n    }\n    return user;\n  }\n  /**\n   * Trigger a request (via a popup window) to the authorization endpoint.\n   *\n   * @returns A promise containing the authenticated `User`.\n   * @throws `Error` In cases of wrong authentication.\n   */\n  async signinPopup(args = {}) {\n    var _a;\n    const logger2 = this._logger.create(\"signinPopup\");\n    let dpopJkt;\n    if ((_a = this.settings.dpop) == null ? void 0 : _a.bind_authorization_code) {\n      dpopJkt = await this.generateDPoPJkt(this.settings.dpop);\n    }\n    const {\n      popupWindowFeatures,\n      popupWindowTarget,\n      popupSignal,\n      ...requestArgs\n    } = args;\n    const url = this.settings.popup_redirect_uri;\n    if (!url) {\n      logger2.throw(new Error(\"No popup_redirect_uri configured\"));\n    }\n    const handle = await this._popupNavigator.prepare({\n      popupWindowFeatures,\n      popupWindowTarget,\n      popupSignal\n    });\n    const user = await this._signin({\n      request_type: \"si:p\",\n      redirect_uri: url,\n      display: \"popup\",\n      dpopJkt,\n      ...requestArgs\n    }, handle);\n    if (user) {\n      if (user.profile && user.profile.sub) {\n        logger2.info(\"success, signed in subject\", user.profile.sub);\n      } else {\n        logger2.info(\"no subject\");\n      }\n    }\n    return user;\n  }\n  /**\n   * Notify the opening window of response (callback) from the authorization endpoint.\n   * It is recommended to use {@link UserManager.signinCallback} instead.\n   *\n   * @returns A promise\n   *\n   * @see {@link UserManager.signinCallback}\n   */\n  async signinPopupCallback(url = window.location.href, keepOpen = false) {\n    const logger2 = this._logger.create(\"signinPopupCallback\");\n    await this._popupNavigator.callback(url, {\n      keepOpen\n    });\n    logger2.info(\"success\");\n  }\n  /**\n   * Trigger a silent request (via refresh token or an iframe) to the authorization endpoint.\n   *\n   * @returns A promise that contains the authenticated `User`.\n   */\n  async signinSilent(args = {}) {\n    var _a, _b;\n    const logger2 = this._logger.create(\"signinSilent\");\n    const {\n      silentRequestTimeoutInSeconds,\n      ...requestArgs\n    } = args;\n    let user = await this._loadUser();\n    if (user == null ? void 0 : user.refresh_token) {\n      logger2.debug(\"using refresh token\");\n      const state = new RefreshState(user);\n      return await this._useRefreshToken({\n        state,\n        redirect_uri: requestArgs.redirect_uri,\n        resource: requestArgs.resource,\n        extraTokenParams: requestArgs.extraTokenParams,\n        timeoutInSeconds: silentRequestTimeoutInSeconds\n      });\n    }\n    let dpopJkt;\n    if ((_a = this.settings.dpop) == null ? void 0 : _a.bind_authorization_code) {\n      dpopJkt = await this.generateDPoPJkt(this.settings.dpop);\n    }\n    const url = this.settings.silent_redirect_uri;\n    if (!url) {\n      logger2.throw(new Error(\"No silent_redirect_uri configured\"));\n    }\n    let verifySub;\n    if (user && this.settings.validateSubOnSilentRenew) {\n      logger2.debug(\"subject prior to silent renew:\", user.profile.sub);\n      verifySub = user.profile.sub;\n    }\n    const handle = await this._iframeNavigator.prepare({\n      silentRequestTimeoutInSeconds\n    });\n    user = await this._signin({\n      request_type: \"si:s\",\n      redirect_uri: url,\n      prompt: \"none\",\n      id_token_hint: this.settings.includeIdTokenInSilentRenew ? user == null ? void 0 : user.id_token : void 0,\n      dpopJkt,\n      ...requestArgs\n    }, handle, verifySub);\n    if (user) {\n      if ((_b = user.profile) == null ? void 0 : _b.sub) {\n        logger2.info(\"success, signed in subject\", user.profile.sub);\n      } else {\n        logger2.info(\"no subject\");\n      }\n    }\n    return user;\n  }\n  async _useRefreshToken(args) {\n    const response = await this._client.useRefreshToken({\n      timeoutInSeconds: this.settings.silentRequestTimeoutInSeconds,\n      ...args\n    });\n    const user = new User({\n      ...args.state,\n      ...response\n    });\n    await this.storeUser(user);\n    await this._events.load(user);\n    return user;\n  }\n  /**\n   *\n   * Notify the parent window of response (callback) from the authorization endpoint.\n   * It is recommended to use {@link UserManager.signinCallback} instead.\n   *\n   * @returns A promise\n   *\n   * @see {@link UserManager.signinCallback}\n   */\n  async signinSilentCallback(url = window.location.href) {\n    const logger2 = this._logger.create(\"signinSilentCallback\");\n    await this._iframeNavigator.callback(url);\n    logger2.info(\"success\");\n  }\n  /**\n   * Process any response (callback) from the authorization endpoint, by dispatching the request_type\n   * and executing one of the following functions:\n   * - {@link UserManager.signinRedirectCallback}\n   * - {@link UserManager.signinPopupCallback}\n   * - {@link UserManager.signinSilentCallback}\n   *\n   * @throws `Error` If request_type is unknown or signin cannot be processed.\n   */\n  async signinCallback(url = window.location.href) {\n    const {\n      state\n    } = await this._client.readSigninResponseState(url);\n    switch (state.request_type) {\n      case \"si:r\":\n        return await this.signinRedirectCallback(url);\n      case \"si:p\":\n        await this.signinPopupCallback(url);\n        break;\n      case \"si:s\":\n        await this.signinSilentCallback(url);\n        break;\n      default:\n        throw new Error(\"invalid response_type in state\");\n    }\n    return void 0;\n  }\n  /**\n   * Process any response (callback) from the end session endpoint, by dispatching the request_type\n   * and executing one of the following functions:\n   * - {@link UserManager.signoutRedirectCallback}\n   * - {@link UserManager.signoutPopupCallback}\n   * - {@link UserManager.signoutSilentCallback}\n   *\n   * @throws `Error` If request_type is unknown or signout cannot be processed.\n   */\n  async signoutCallback(url = window.location.href, keepOpen = false) {\n    const {\n      state\n    } = await this._client.readSignoutResponseState(url);\n    if (!state) {\n      return void 0;\n    }\n    switch (state.request_type) {\n      case \"so:r\":\n        return await this.signoutRedirectCallback(url);\n      case \"so:p\":\n        await this.signoutPopupCallback(url, keepOpen);\n        break;\n      case \"so:s\":\n        await this.signoutSilentCallback(url);\n        break;\n      default:\n        throw new Error(\"invalid response_type in state\");\n    }\n    return void 0;\n  }\n  /**\n   * Query OP for user's current signin status.\n   *\n   * @returns A promise object with session_state and subject identifier.\n   */\n  async querySessionStatus(args = {}) {\n    const logger2 = this._logger.create(\"querySessionStatus\");\n    const {\n      silentRequestTimeoutInSeconds,\n      ...requestArgs\n    } = args;\n    const url = this.settings.silent_redirect_uri;\n    if (!url) {\n      logger2.throw(new Error(\"No silent_redirect_uri configured\"));\n    }\n    const user = await this._loadUser();\n    const handle = await this._iframeNavigator.prepare({\n      silentRequestTimeoutInSeconds\n    });\n    const navResponse = await this._signinStart({\n      request_type: \"si:s\",\n      // this acts like a signin silent\n      redirect_uri: url,\n      prompt: \"none\",\n      id_token_hint: this.settings.includeIdTokenInSilentRenew ? user == null ? void 0 : user.id_token : void 0,\n      response_type: this.settings.query_status_response_type,\n      scope: \"openid\",\n      skipUserInfo: true,\n      ...requestArgs\n    }, handle);\n    try {\n      const extraHeaders = {};\n      const signinResponse = await this._client.processSigninResponse(navResponse.url, extraHeaders);\n      logger2.debug(\"got signin response\");\n      if (signinResponse.session_state && signinResponse.profile.sub) {\n        logger2.info(\"success for subject\", signinResponse.profile.sub);\n        return {\n          session_state: signinResponse.session_state,\n          sub: signinResponse.profile.sub\n        };\n      }\n      logger2.info(\"success, user not authenticated\");\n      return null;\n    } catch (err) {\n      if (this.settings.monitorAnonymousSession && err instanceof ErrorResponse) {\n        switch (err.error) {\n          case \"login_required\":\n          case \"consent_required\":\n          case \"interaction_required\":\n          case \"account_selection_required\":\n            logger2.info(\"success for anonymous user\");\n            return {\n              // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n              session_state: err.session_state\n            };\n        }\n      }\n      throw err;\n    }\n  }\n  async _signin(args, handle, verifySub) {\n    const navResponse = await this._signinStart(args, handle);\n    return await this._signinEnd(navResponse.url, verifySub);\n  }\n  async _signinStart(args, handle) {\n    const logger2 = this._logger.create(\"_signinStart\");\n    try {\n      const signinRequest = await this._client.createSigninRequest(args);\n      logger2.debug(\"got signin request\");\n      return await handle.navigate({\n        url: signinRequest.url,\n        state: signinRequest.state.id,\n        response_mode: signinRequest.state.response_mode,\n        scriptOrigin: this.settings.iframeScriptOrigin\n      });\n    } catch (err) {\n      logger2.debug(\"error after preparing navigator, closing navigator window\");\n      handle.close();\n      throw err;\n    }\n  }\n  async _signinEnd(url, verifySub) {\n    const logger2 = this._logger.create(\"_signinEnd\");\n    const extraHeaders = {};\n    const signinResponse = await this._client.processSigninResponse(url, extraHeaders);\n    logger2.debug(\"got signin response\");\n    const user = await this._buildUser(signinResponse, verifySub);\n    return user;\n  }\n  async _buildUser(signinResponse, verifySub) {\n    const logger2 = this._logger.create(\"_buildUser\");\n    const user = new User(signinResponse);\n    if (verifySub) {\n      if (verifySub !== user.profile.sub) {\n        logger2.debug(\"current user does not match user returned from signin. sub from signin:\", user.profile.sub);\n        throw new ErrorResponse({\n          ...signinResponse,\n          error: \"login_required\"\n        });\n      }\n      logger2.debug(\"current user matches user returned from signin\");\n    }\n    await this.storeUser(user);\n    logger2.debug(\"user stored\");\n    await this._events.load(user);\n    return user;\n  }\n  /**\n   * Trigger a redirect of the current window to the end session endpoint.\n   *\n   * @returns A promise\n   */\n  async signoutRedirect(args = {}) {\n    const logger2 = this._logger.create(\"signoutRedirect\");\n    const {\n      redirectMethod,\n      ...requestArgs\n    } = args;\n    const handle = await this._redirectNavigator.prepare({\n      redirectMethod\n    });\n    await this._signoutStart({\n      request_type: \"so:r\",\n      post_logout_redirect_uri: this.settings.post_logout_redirect_uri,\n      ...requestArgs\n    }, handle);\n    logger2.info(\"success\");\n  }\n  /**\n   * Process response (callback) from the end session endpoint.\n   * It is recommended to use {@link UserManager.signoutCallback} instead.\n   *\n   * @returns A promise containing signout response\n   *\n   * @see {@link UserManager.signoutCallback}\n   */\n  async signoutRedirectCallback(url = window.location.href) {\n    const logger2 = this._logger.create(\"signoutRedirectCallback\");\n    const response = await this._signoutEnd(url);\n    logger2.info(\"success\");\n    return response;\n  }\n  /**\n   * Trigger a redirect of a popup window to the end session endpoint.\n   *\n   * @returns A promise\n   */\n  async signoutPopup(args = {}) {\n    const logger2 = this._logger.create(\"signoutPopup\");\n    const {\n      popupWindowFeatures,\n      popupWindowTarget,\n      popupSignal,\n      ...requestArgs\n    } = args;\n    const url = this.settings.popup_post_logout_redirect_uri;\n    const handle = await this._popupNavigator.prepare({\n      popupWindowFeatures,\n      popupWindowTarget,\n      popupSignal\n    });\n    await this._signout({\n      request_type: \"so:p\",\n      post_logout_redirect_uri: url,\n      // we're putting a dummy entry in here because we\n      // need a unique id from the state for notification\n      // to the parent window, which is necessary if we\n      // plan to return back to the client after signout\n      // and so we can close the popup after signout\n      state: url == null ? void 0 : {},\n      ...requestArgs\n    }, handle);\n    logger2.info(\"success\");\n  }\n  /**\n   * Process response (callback) from the end session endpoint from a popup window.\n   * It is recommended to use {@link UserManager.signoutCallback} instead.\n   *\n   * @returns A promise\n   *\n   * @see {@link UserManager.signoutCallback}\n   */\n  async signoutPopupCallback(url = window.location.href, keepOpen = false) {\n    const logger2 = this._logger.create(\"signoutPopupCallback\");\n    await this._popupNavigator.callback(url, {\n      keepOpen\n    });\n    logger2.info(\"success\");\n  }\n  async _signout(args, handle) {\n    const navResponse = await this._signoutStart(args, handle);\n    return await this._signoutEnd(navResponse.url);\n  }\n  async _signoutStart(args = {}, handle) {\n    var _a;\n    const logger2 = this._logger.create(\"_signoutStart\");\n    try {\n      const user = await this._loadUser();\n      logger2.debug(\"loaded current user from storage\");\n      if (this.settings.revokeTokensOnSignout) {\n        await this._revokeInternal(user);\n      }\n      const id_token = args.id_token_hint || user && user.id_token;\n      if (id_token) {\n        logger2.debug(\"setting id_token_hint in signout request\");\n        args.id_token_hint = id_token;\n      }\n      await this.removeUser();\n      logger2.debug(\"user removed, creating signout request\");\n      const signoutRequest = await this._client.createSignoutRequest(args);\n      logger2.debug(\"got signout request\");\n      return await handle.navigate({\n        url: signoutRequest.url,\n        state: (_a = signoutRequest.state) == null ? void 0 : _a.id,\n        scriptOrigin: this.settings.iframeScriptOrigin\n      });\n    } catch (err) {\n      logger2.debug(\"error after preparing navigator, closing navigator window\");\n      handle.close();\n      throw err;\n    }\n  }\n  async _signoutEnd(url) {\n    const logger2 = this._logger.create(\"_signoutEnd\");\n    const signoutResponse = await this._client.processSignoutResponse(url);\n    logger2.debug(\"got signout response\");\n    return signoutResponse;\n  }\n  /**\n   * Trigger a silent request (via an iframe) to the end session endpoint.\n   *\n   * @returns A promise\n   */\n  async signoutSilent(args = {}) {\n    var _a;\n    const logger2 = this._logger.create(\"signoutSilent\");\n    const {\n      silentRequestTimeoutInSeconds,\n      ...requestArgs\n    } = args;\n    const id_token_hint = this.settings.includeIdTokenInSilentSignout ? (_a = await this._loadUser()) == null ? void 0 : _a.id_token : void 0;\n    const url = this.settings.popup_post_logout_redirect_uri;\n    const handle = await this._iframeNavigator.prepare({\n      silentRequestTimeoutInSeconds\n    });\n    await this._signout({\n      request_type: \"so:s\",\n      post_logout_redirect_uri: url,\n      id_token_hint,\n      ...requestArgs\n    }, handle);\n    logger2.info(\"success\");\n  }\n  /**\n   * Notify the parent window of response (callback) from the end session endpoint.\n   * It is recommended to use {@link UserManager.signoutCallback} instead.\n   *\n   * @returns A promise\n   *\n   * @see {@link UserManager.signoutCallback}\n   */\n  async signoutSilentCallback(url = window.location.href) {\n    const logger2 = this._logger.create(\"signoutSilentCallback\");\n    await this._iframeNavigator.callback(url);\n    logger2.info(\"success\");\n  }\n  async revokeTokens(types) {\n    const user = await this._loadUser();\n    await this._revokeInternal(user, types);\n  }\n  async _revokeInternal(user, types = this.settings.revokeTokenTypes) {\n    const logger2 = this._logger.create(\"_revokeInternal\");\n    if (!user) return;\n    const typesPresent = types.filter(type => typeof user[type] === \"string\");\n    if (!typesPresent.length) {\n      logger2.debug(\"no need to revoke due to no token(s)\");\n      return;\n    }\n    for (const type of typesPresent) {\n      await this._client.revokeToken(user[type],\n      // eslint-disable-line @typescript-eslint/no-non-null-assertion\n      type);\n      logger2.info(`${type} revoked successfully`);\n      if (type !== \"access_token\") {\n        user[type] = null;\n      }\n    }\n    await this.storeUser(user);\n    logger2.debug(\"user stored\");\n    await this._events.load(user);\n  }\n  /**\n   * Enables silent renew for the `UserManager`.\n   */\n  startSilentRenew() {\n    this._logger.create(\"startSilentRenew\");\n    void this._silentRenewService.start();\n  }\n  /**\n   * Disables silent renew for the `UserManager`.\n   */\n  stopSilentRenew() {\n    this._silentRenewService.stop();\n  }\n  get _userStoreKey() {\n    return `user:${this.settings.authority}:${this.settings.client_id}`;\n  }\n  async _loadUser() {\n    const logger2 = this._logger.create(\"_loadUser\");\n    const storageString = await this.settings.userStore.get(this._userStoreKey);\n    if (storageString) {\n      logger2.debug(\"user storageString loaded\");\n      return User.fromStorageString(storageString);\n    }\n    logger2.debug(\"no user storageString\");\n    return null;\n  }\n  async storeUser(user) {\n    const logger2 = this._logger.create(\"storeUser\");\n    if (user) {\n      logger2.debug(\"storing user\");\n      const storageString = user.toStorageString();\n      await this.settings.userStore.set(this._userStoreKey, storageString);\n    } else {\n      this._logger.debug(\"removing user\");\n      await this.settings.userStore.remove(this._userStoreKey);\n      if (this.settings.dpop) {\n        await this.settings.dpop.store.remove(this.settings.client_id);\n      }\n    }\n  }\n  /**\n   * Removes stale state entries in storage for incomplete authorize requests.\n   */\n  async clearStaleState() {\n    await this._client.clearStaleState();\n  }\n  /**\n   * Dynamically generates a DPoP proof for a given user, URL and optional Http method.\n   * This method is useful when you need to make a request to a resource server\n   * with fetch or similar, and you need to include a DPoP proof in a DPoP header.\n   * @param url - The URL to generate the DPoP proof for\n   * @param user - The user to generate the DPoP proof for\n   * @param httpMethod - Optional, defaults to \"GET\"\n   * @param nonce - Optional nonce provided by the resource server\n   *\n   * @returns A promise containing the DPoP proof or undefined if DPoP is not enabled/no user is found.\n   */\n  async dpopProof(url, user, httpMethod, nonce) {\n    var _a, _b;\n    const dpopState = await ((_b = (_a = this.settings.dpop) == null ? void 0 : _a.store) == null ? void 0 : _b.get(this.settings.client_id));\n    if (dpopState) {\n      return await CryptoUtils.generateDPoPProof({\n        url,\n        accessToken: user == null ? void 0 : user.access_token,\n        httpMethod,\n        keyPair: dpopState.keys,\n        nonce\n      });\n    }\n    return void 0;\n  }\n  async generateDPoPJkt(dpopSettings) {\n    let dpopState = await dpopSettings.store.get(this.settings.client_id);\n    if (!dpopState) {\n      const dpopKeys = await CryptoUtils.generateDPoPKeys();\n      dpopState = new DPoPState(dpopKeys);\n      await dpopSettings.store.set(this.settings.client_id, dpopState);\n    }\n    return await CryptoUtils.generateDPoPJkt(dpopState.keys);\n  }\n};\n\n// package.json\nvar version = \"3.1.0\";\n\n// src/Version.ts\nvar Version = version;\n\n// src/IndexedDbDPoPStore.ts\nvar IndexedDbDPoPStore = class {\n  constructor() {\n    this._dbName = \"oidc\";\n    this._storeName = \"dpop\";\n  }\n  async set(key, value) {\n    const store = await this.createStore(this._dbName, this._storeName);\n    await store(\"readwrite\", str => {\n      str.put(value, key);\n      return this.promisifyRequest(str.transaction);\n    });\n  }\n  async get(key) {\n    const store = await this.createStore(this._dbName, this._storeName);\n    return await store(\"readonly\", str => {\n      return this.promisifyRequest(str.get(key));\n    });\n  }\n  async remove(key) {\n    const item = await this.get(key);\n    const store = await this.createStore(this._dbName, this._storeName);\n    await store(\"readwrite\", str => {\n      return this.promisifyRequest(str.delete(key));\n    });\n    return item;\n  }\n  async getAllKeys() {\n    const store = await this.createStore(this._dbName, this._storeName);\n    return await store(\"readonly\", str => {\n      return this.promisifyRequest(str.getAllKeys());\n    });\n  }\n  promisifyRequest(request) {\n    return new Promise((resolve, reject) => {\n      request.oncomplete = request.onsuccess = () => resolve(request.result);\n      request.onabort = request.onerror = () => reject(request.error);\n    });\n  }\n  async createStore(dbName, storeName) {\n    const request = indexedDB.open(dbName);\n    request.onupgradeneeded = () => request.result.createObjectStore(storeName);\n    const db = await this.promisifyRequest(request);\n    return async (txMode, callback) => {\n      const tx = db.transaction(storeName, txMode);\n      const store = tx.objectStore(storeName);\n      return await callback(store);\n    };\n  }\n};\nexport { AccessTokenEvents, CheckSessionIFrame, DPoPState, ErrorResponse, ErrorTimeout, InMemoryWebStorage, IndexedDbDPoPStore, Log, Logger, MetadataService, OidcClient, OidcClientSettingsStore, SessionMonitor, SigninResponse, SigninState, SignoutResponse, State, User, UserManager, UserManagerSettingsStore, Version, WebStorageStateStore };\n"],
  "mappings": "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",
  "names": ["_CryptoUtils", "_a", "_SigninRequest"]
}
